<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OsmExplorer</name>
    </assembly>
    <members>
        <member name="T:OsmExplorer.Units.WeightUnits">
            <summary>
            Enumeration representing a type of weight measurment.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.WeightUnits.Pounds">
            <summary>
            Pounds (lb)
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.WeightUnits.Kilograms">
            <summary>
            Kilograms (kg)
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.WeightUnits.ShortTons">
            <summary>
            Short tons.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.WeightUnits.MetricTons">
            <summary>
            Metric tons (tonnes).
            </summary>
        </member>
        <member name="T:OsmExplorer.Exceptions.RoadLinksNotFoundException">
            <summary>
            Exception thrown when a RoadLink query fails to return a RoadLink object.
            Most often due to insufficient/non-existent data at the quieried location.
            </summary>
        </member>
        <member name="T:OsmExplorer.Exceptions.DatabaseException">
            <summary>
            Base class for database exceptions
            </summary>
        </member>
        <member name="T:OsmExplorer.Spatial.BoundingBox">
            <summary>
            A Rectangular box that can be defined around a set of points
            or a single point with provided dimensions
            </summary>
        </member>
        <member name="M:OsmExplorer.Spatial.BoundingBox.#ctor(OsmExplorer.Spatial.LatLon[])">
            <summary>
            Constructs a BoundingBox that contains all the specified LatLons
            </summary>
            <param name="points">One or more LatLon points</param>
        </member>
        <member name="M:OsmExplorer.Spatial.BoundingBox.#ctor(OsmExplorer.Spatial.LatLon,System.Double)">
            <summary>
            Constructs a square BoundingBox centered on the specified point 
            with dimensions (in degrees) specified by the size parameter
            </summary>
            <param name="CenterPoint">LatLon that the BoundingBox is centered over</param>
            <param name="size">Size in degrees of the edges of the BoundingBox</param>
        </member>
        <member name="M:OsmExplorer.Spatial.BoundingBox.#ctor(OsmExplorer.Spatial.LatLon,System.Double,System.Double)">
            <summary>
            Constructs a square BoundingBox centered on the specified point 
            with dimensions (in degrees) specified by the height and width parameters.
            </summary>
            <param name="CenterPoint">LatLon that the BoundingBox is centered over.</param>
            <param name="height">Height in degrees of latitude of the BoundingBox.</param>
            <param name="width">Width in degress of longitude of the BoundingBox.</param>
        </member>
        <member name="M:OsmExplorer.Spatial.BoundingBox.#ctor(Volante.RectangleR2)">
            <summary>
            Creates a BoundingBox from a Volante.RectangleR2
            </summary>
            <param name="rect">Volante RectangleR2</param>
        </member>
        <member name="M:OsmExplorer.Spatial.BoundingBox.Contains(OsmExplorer.Spatial.LatLon)">
            <summary>
            Returns whether the BoundingBox contains the specified point
            </summary>
            <param name="point">Point to test</param>
            <returns>Returns true if the point lies on an edge or within the BoundingBox</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.BoundingBox.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo with the data
            needed to serialize a BoundingBox object
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo to 
            populate with data</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) 
            for this serialization.</param>
        </member>
        <member name="M:OsmExplorer.Spatial.BoundingBox.Equals(System.Object)">
            <summary>
            Indicates if this BoundingBox is equal to the specified object instance.
            </summary>
            <param name="obj">Specified object instance.</param>
            <returns>Returns false if the specified object is not a BoundingBox or
            and/or has dimensions different from the current BoundingBox instance.
            Otherwise, returns true.</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.BoundingBox.GetHashCode">
            <summary>
            Returns a hashcode for a BoundingBox instance.
            </summary>
            <returns>Hashcode for this instance.</returns>
        </member>
        <member name="P:OsmExplorer.Spatial.BoundingBox.y_max">
            <summary>
            Returns the top edge of the BoundingBox
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.BoundingBox.y_min">
            <summary>
            Returns the bottom edge of the BoundingBox
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.BoundingBox.x_max">
            <summary>
            Returns the right edge of the BoundingBox
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.BoundingBox.x_min">
            <summary>
            Returns the left edge of the BoundingBox
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.BoundingBox.Rectangle">
            <summary>
            Returns a representative Volante.RectangleR2 of this BoundingBox
            </summary>
        </member>
        <member name="T:OsmExplorer.Routing.VehicleType">
            <summary>
            The type of vehicle to route.
            </summary>
        </member>
        <member name="F:OsmExplorer.Routing.VehicleType.Auto">
            <summary>
            Passenger car
            </summary>
        </member>
        <member name="F:OsmExplorer.Routing.VehicleType.Truck_1">
            <summary>
            Freight/delivery truck with GVWR less than 26,000 lbs.
            </summary>
        </member>
        <member name="F:OsmExplorer.Routing.VehicleType.Truck_2">
            <summary>
            Freight vehicle (typically semi/tractor-trailer) with GVWR greater than 26,000 lbs.
            </summary>
        </member>
        <member name="F:OsmExplorer.Routing.VehicleType.Hazmat">
            <summary>
            Any vehicle carrying hazardous material. Will avoid tunnels
            and (if tagged) ares where hazmat transport is specifically
            prohibited.
            </summary>
        </member>
        <member name="F:OsmExplorer.Routing.VehicleType.Scooter_50cc">
            <summary>
            Scooter/moped under 50cc. Will avoid controlled-access
            freeways and other roads where slow traffic is prohibited.
            </summary>
        </member>
        <member name="T:OsmExplorer.Rendering.TileType">
            <summary>
            Specifies the type of map tiles to use in the Map Explorer
            </summary>
        </member>
        <member name="F:OsmExplorer.Rendering.TileType.Osm">
            <summary>
            OpenStreetMap tiles.
            </summary>
        </member>
        <member name="F:OsmExplorer.Rendering.TileType.MapQuest">
            <summary>
            MapQuest tiles.
            </summary>
        </member>
        <member name="T:OsmExplorer.Rendering.TileManager">
            <summary>
            Class that manages map image tile downloading and caching.
            Maintains an internal limit on tile cache size to conserve memory.
            </summary>
        </member>
        <member name="M:OsmExplorer.Rendering.TileManager.#ctor(OsmExplorer.Rendering.TileType)">
            <summary>
            Creates a new TileManager instance with the specified TileType
            (OSM or MapQuest) and the default cache size (150 tiles). See
            remarks.
            </summary>
            <param name="type">Type of tiles to download.</param>
            <remarks>TileManager maintains a cache of tiles and automatically
            removes the tiles furthest from the current map view when the 
            cache exceeds the cache size limit. </remarks>
        </member>
        <member name="M:OsmExplorer.Rendering.TileManager.#ctor(OsmExplorer.Rendering.TileType,System.UInt32)">
            <summary>
            Creates a new TileManager instance with the specified TileType
            (OSM or MapQuest) and the specified tile cache size (recommended is at least 50).
            See remarks.
            </summary>
            <param name="type">Type of tiles to download.</param>
            <param name="MaxTileCache">Maximum number of cached tiles to store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">MaxTileCache is set to 0.</exception>
            <remarks>TileManager maintains a cache of tiles and automatically
            removes the tiles furthest from the current map view when the 
            cache exceeds the cache size limit. </remarks>
        </member>
        <member name="M:OsmExplorer.Rendering.TileManager.GetTile(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets an Image tile for the specified x-y coordinates (transformed from
            LatLon values) and zoom level.
            </summary>
            <param name="x">x-coordinate</param>
            <param name="y">y-coordinate</param>
            <param name="zoom">Zoom level</param>
            <returns>Bitmap image</returns>
        </member>
        <member name="M:OsmExplorer.Rendering.TileManager.EmptyCache">
            <summary>
            Empties the tile cache of all downloaded map tiles.
            </summary>
        </member>
        <member name="E:OsmExplorer.Rendering.TileManager.NewDataAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="T:OsmExplorer.Rendering.TileManager.NewDataAvailableHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:OsmExplorer.Rendering.IRenderable">
            <summary>
            Interface for objects that can be rendered on the Map Explorer.
            Not yet implemented.
            </summary>
        </member>
        <member name="T:OsmExplorer.Exceptions.RouteNotFoundException">
            <summary>
            Error thrown when a route cannot be found between a specified
            start and end location. Can be the result of insufficient data,
            erroneous data or impassable areas on the map, among other things.
            </summary>
        </member>
        <member name="T:OsmExplorer.Exceptions.RoutingException">
            <summary>
            Base class for all routing exceptions.
            </summary>
        </member>
        <member name="T:OsmExplorer.Units.DistanceUnits">
            <summary>
            Enumeration representing a type of unit of distance measurement.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceUnits.Feet">
            <summary>
            Feet.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceUnits.Meters">
            <summary>
            Meters.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceUnits.Kilometers">
            <summary>
            Kilometers.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceUnits.Miles">
            <summary>
            Miles.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceUnits.NauticalMiles">
            <summary>
            Nautical miles.
            </summary>
        </member>
        <member name="F:OsmExplorer.LinkQuery.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OsmExplorer.LinkQuery.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OsmExplorer.LinkQuery.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OsmExplorer.Routing.RoutingEngine">
            <summary>
            Instantiates the RoutingEngine class for point-to-point routing. The RoutingEngine
            utilizes a bidirectional, hierarchical A* search algorithm with parallel execution
            for fast route calculations. 
            </summary>
        </member>
        <member name="M:OsmExplorer.Routing.RoutingEngine.#ctor">
            <summary>
            Initializes a new instance of the RoutingEngine.
            </summary>
        </member>
        <member name="M:OsmExplorer.Routing.RoutingEngine.#ctor(OsmExplorer.Spatial.LatLon,OsmExplorer.Spatial.LatLon,OsmExplorer.Routing.RoutingStrategy)">
            <summary>
            Initializes a new instance of the RoutingEngine for specified start and end points and
            a RoutingStrategy.
            </summary>
            <param name="Start">Start location</param>
            <param name="End">End location</param>
            <param name="Strategy">Strategy (shortest or fastest) to route by</param>
        </member>
        <member name="M:OsmExplorer.Routing.RoutingEngine.CalculateRoute">
            <summary>
            Calculates a route for the specified start and end locations.
            </summary>
            <returns>Results from the calculated route</returns>
        </member>
        <member name="P:OsmExplorer.Routing.RoutingEngine.AvoidUTurns">
            <summary>
            Gets or sets whether the RoutingEngine will avoid making
            U-turns. Default is false;
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoutingEngine.AvoidTollRoads">
            <summary>
            Gets or sets whether RoutingEngine will avoid toll roads. 
            Default is false;
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoutingEngine.vehicleType">
            <summary>
            Gets or sets the vehicle type. 
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoutingEngine.Start">
            <summary>
            Gets or sets the start location of the current route.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoutingEngine.End">
            <summary>
            Gets or sets the end location of the current route.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoutingEngine.Strategy">
            <summary>
            Gets or sets the routing strategy used for this route.
            </summary>
        </member>
        <member name="T:OsmExplorer.Data.RoadCategory">
            <summary>
            RoadLink categories based on OSM highway classifications. See descriptions.
            </summary>
        </member>
        <member name="F:OsmExplorer.Data.RoadCategory.motorways">
            <summary>
            Motorways and motorway_links
            </summary>
        </member>
        <member name="F:OsmExplorer.Data.RoadCategory.trunk">
            <summary>
            Trunks and trunk_links
            </summary>
        </member>
        <member name="F:OsmExplorer.Data.RoadCategory.primary">
            <summary>
            Primary and primary_links
            </summary>
        </member>
        <member name="F:OsmExplorer.Data.RoadCategory.secondary">
            <summary>
            Secondary and secondary_links
            </summary>
        </member>
        <member name="F:OsmExplorer.Data.RoadCategory.tertiary">
            <summary>
            Tertiary and tertiary_links
            </summary>
        </member>
        <member name="F:OsmExplorer.Data.RoadCategory.residential">
            <summary>
            Residential
            </summary>
        </member>
        <member name="F:OsmExplorer.Data.RoadCategory.service">
            <summary>
            Service and/or private roads
            </summary>
        </member>
        <member name="T:OsmExplorer.Rendering.RenderCollection">
            <summary>
            Class containing a collection of objects to be rendered on the
            Map Explorer window. Not yet implemented.
            </summary>
        </member>
        <member name="T:OsmExplorer.Routing.RoadFlags">
            <summary>
            Represents a set of routing constraints for a RoadLink.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.MaxHeight">
            <summary>
            Indicates the maximum height of the RoadLink (e.g. of an overpass)
            if one exists in meters. If none exists, default value is set to 20 meters.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.MaxWidth">
            <summary>
            Indicates the maximum permitted width in feet along the RoadLink, if any exists.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.MaxLength">
            <summary>
            Maximum length permitted in feet.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.MaxWeight">
            <summary>
            Indicates the maximum weight permitted on the RoadLink, if any exists.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.Heading_F_Inbound">
            <summary>
            Gets the initial heading starting at the FirstPoint 
            and moving towards the LastPoint of the RoadLink.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.Heading_F_Outbound">
            <summary>
            Gets the final heading at the FirstPoint when traversing the RoadLink
            starting at the LastPoint.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.Heading_L_Inbound">
            <summary>
            Gets the initial heading when starting at the LastPoint on
            the RoadLink and moving towards the FirstPoint.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.Heading_L_Outbound">
            <summary>
            Gets the final heading at the LastPoint when traversing 
            the RoadLink starting at the FirstPoint.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.Tollway">
            <summary>
            Indicates whether RoadLink is a tollway
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.Tunnel">
            <summary>
            Indicates if this RoadLink is a tunnel
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.Bridge">
            <summary>
            Indicates if this RoadLink is a bridge
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.Roundabout">
            <summary>
            Indicates if this RoadLink is a roundabout
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.Barricade">
            <summary>
            Indicates whether the RoadLink has a barricade of some kind across it,
            prohibiting through travel.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.PrivateAccess">
            <summary>
            True when general traffic (public) is not permitted
            to travel on this RoadLink.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.PermissiveAccess">
            <summary>
            Indicates whether general access is permissive.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.DeliveryAccess">
            <summary>
            Access permission for light commercial vehicles (LCV) 
            or goods vehicles of category N1 with a maximum allowed 
            mass of up to 3.5 tonnes. In the USA, combined weight 
            26,000 lbs or less. True if delivery access allowed.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.TruckAccess">
            <summary>
            Access permission for Heavy Goods Vehicles (HGV) (UK), 
            e.g. for goods vehicles of category N2 and N3 (trucks, 
            lorries) with a maximum allowed mass over 3.5 tonnes. 
            In the USA, combined weight 26,001 lbs or greater
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.HazmatAccess">
            <summary>
            Access permission for vehicles carrying 
            hazardous materials.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.EmergencyAccess">
            <summary>
            Indicates if emergency vehicles are permitted.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.MotorVehicleAccess">
            <summary>
            Indicates whether motor vehicle are permitted.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.BicycleAccess">
            <summary>
            Indicates whether bicycles are permitted.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.ProhibitedFrom">
            <summary>
            Get an array of WayIds that this RoadLink is not reachable from due to 
            turn restrictions or other constraints.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.ProhibitedTo">
            <summary>
            Get an array of WayIds that are not reachable from this RoadLink due to 
            turn restrictions or other constraints.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.TravelSpeed">
            <summary>
            Approximate travel speed along the RoadLink
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.TravelDistanceMeters">
            <summary>
            Returns the travel distance along the RoadLink in meters.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.EstTravelTime">
            <summary>
            Gets the estimated travel time in milliseconds for the RoadLink.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.StopSign">
            <summary>
            Returns the configuration of stop signs on the RoadLink. See remarks.
            </summary>
            <remarks >
            F = Stop sign on the FirstPoint
            L = Stop sign on the LastPoint
            B = Stop signs on both the FirstPoint and LastPoint
            N = No stop signs on either end
            </remarks>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.TrafficSignal">
            <summary>
            Returns the configuration of traffic signals on the RoadLink. See remarks.
            </summary>
            <remarks >
            F = Signal on the FirstPoint
            L = Signal on the LastPoint
            B = Signals on both the FirstPoint and LastPoint
            N = No signals on either end
            </remarks>
        </member>
        <member name="P:OsmExplorer.Routing.RoadFlags.Barrier">
            <summary>
            Gets the location of a barrier curb (kerb) on the RoadLink.
            Useful for determining if a barrier extends across two connected
            RoadLinks, prohibiting (for example) left turns onto another connected
            RoadLink. See remarks.
            </summary>
            <remarks >
            F = Barrier extends to the FirstPoint
            L = Barrier extends to the LastPoint
            B = Barrier extends to both the FirstPoint and LastPoint
            N = No barrier on this RoadLink
            </remarks>
        </member>
        <member name="T:OsmExplorer.Units.DistanceSpan">
            <summary>
            Structure representing a distance interval.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceSpan.MetersPerFoot">
            <summary>
            Number of meters per foot. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceSpan.MetersPerKilometer">
            <summary>
            Number of meters per kilometer. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceSpan.MetersPerMile">
            <summary>
            Number of meters per mile. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceSpan.MetersPerNauticalMile">
            <summary>
            Number of meters per nautical mile. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceSpan.FeetPerMeter">
            <summary>
            Number of feet per meter. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceSpan.FeetPerKilometer">
            <summary>
            Number of feet per kilometer. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceSpan.FeetPerMile">
            <summary>
            Number of feet per mile. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.DistanceSpan.FeetPerNauticalMile">
            <summary>
            Number of feet per nautical mile. This field is constant.
            </summary>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.#ctor(System.Double,OsmExplorer.Units.DistanceUnits)">
            <summary>
            Creates a new DistanceSpan for the specified distance and DistanceUnits.
            </summary>
            <param name="distance">Distance interval.</param>
            <param name="units">Distance units.</param>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.op_Addition(OsmExplorer.Units.DistanceSpan,OsmExplorer.Units.DistanceSpan)">
            <summary>
            Adds two DistanceSpans.
            </summary>
            <param name="d1">First DistanceSpan</param>
            <param name="d2">Second DistanceSpan</param>
            <returns>Sum of the DistanceSpans</returns>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.op_Subtraction(OsmExplorer.Units.DistanceSpan,OsmExplorer.Units.DistanceSpan)">
            <summary>
            Subtracts one DistanceSpan from another.
            </summary>
            <param name="d1">First DistanceSpan</param>
            <param name="d2">Second DistanceSpan</param>
            <returns>The difference of the DistanceSpans</returns>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.op_Division(OsmExplorer.Units.DistanceSpan,OsmExplorer.Units.DistanceSpan)">
            <summary>
            Gets the ratio of two DistanceSpans
            </summary>
            <param name="d1">First DistanceSpan</param>
            <param name="d2">Second DistanceSpan</param>
            <returns>Ratio of the DistanceSpans</returns>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.op_Equality(OsmExplorer.Units.DistanceSpan,OsmExplorer.Units.DistanceSpan)">
            <summary>
            Determines if two DistanceSpans are equal in length;
            </summary>
            <param name="d1">First DistanceSpan</param>
            <param name="d2">Second DistanceSpan</param>
            <returns>True if x and y are equal in length</returns>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.op_Inequality(OsmExplorer.Units.DistanceSpan,OsmExplorer.Units.DistanceSpan)">
            <summary>
            Determines if two DistanceSpans have different lengths;
            </summary>
            <param name="d1">First DistanceSpan</param>
            <param name="d2">Second DistanceSpan</param>
            <returns>True if x and y are of different lengths</returns>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.op_GreaterThan(OsmExplorer.Units.DistanceSpan,OsmExplorer.Units.DistanceSpan)">
            <summary>
            Tests whether one DistanceSpan is greater in length than another
            </summary>
            <param name="d1">First DistanceSpan</param>
            <param name="d2">Second DistanceSpan</param>
            <returns>True if d1 is greater than d2</returns>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.op_LessThan(OsmExplorer.Units.DistanceSpan,OsmExplorer.Units.DistanceSpan)">
            <summary>
            Tests whether one DistanceSpan is shorter in length than another
            </summary>
            <param name="d1">First DistanceSpan</param>
            <param name="d2">Second DistanceSpan</param>
            <returns>True if d1 is less than d2</returns>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.op_GreaterThanOrEqual(OsmExplorer.Units.DistanceSpan,OsmExplorer.Units.DistanceSpan)">
            <summary>
            Tests whether one DistanceSpan is greater than or equal in length to another
            </summary>
            <param name="d1">First DistanceSpan</param>
            <param name="d2">Second DistanceSpan</param>
            <returns>True if d1 is greater than or equal to d2</returns>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.op_LessThanOrEqual(OsmExplorer.Units.DistanceSpan,OsmExplorer.Units.DistanceSpan)">
            <summary>
            Tests whether one DistanceSpan is less than or equal in length to another
            </summary>
            <param name="d1">First DistanceSpan</param>
            <param name="d2">Second DistanceSpan</param>
            <returns>True if d1 is less than or equal to d2</returns>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to this DistanceSpan instance
            </summary>
            <param name="obj">System.Object</param>
            <returns>True if obj is a DistanceSpan and equal in length, otherwise false</returns>
        </member>
        <member name="M:OsmExplorer.Units.DistanceSpan.GetHashCode">
            <summary>
            Returns a hashcode for the DistanceSpan instance.
            </summary>
            <returns>A hashcode for this instance</returns>
        </member>
        <member name="P:OsmExplorer.Units.DistanceSpan.Feet">
            <summary>
            Gets the length of the DistanceSpan in feet.
            </summary>
        </member>
        <member name="P:OsmExplorer.Units.DistanceSpan.Meters">
            <summary>
            Gets the length of the DistanceSpan in meters.
            </summary>
        </member>
        <member name="P:OsmExplorer.Units.DistanceSpan.Kilometers">
            <summary>
            Gets the length of the DistanceSpan in kilometers.
            </summary>
        </member>
        <member name="P:OsmExplorer.Units.DistanceSpan.Miles">
            <summary>
            Gets the length of the DistanceSpan in miles.
            </summary>
        </member>
        <member name="P:OsmExplorer.Units.DistanceSpan.NauticalMiles">
            <summary>
            Gets the length of the DistanceSpan in nautical miles.
            </summary>
        </member>
        <member name="F:OsmExplorer.RouteResultsWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OsmExplorer.RouteResultsWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OsmExplorer.RouteResultsWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OsmExplorer.Routing.RouteResult">
            <summary>
            Output class produced by the routing engine containing
            results from a calculated route and rendering data.
            </summary>
        </member>
        <member name="M:OsmExplorer.Routing.RouteResult.Render(System.Drawing.Graphics@)">
            <summary>
            Not yet implemented.
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="P:OsmExplorer.Routing.RouteResult.StartLocation">
            <summary>
            Start location of the route.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RouteResult.EndLocation">
            <summary>
            End location of the route.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RouteResult.RoutePoints">
            <summary>
            Points that make up this route.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RouteResult.TravelTime">
            <summary>
            Estimates total travel time of the route.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RouteResult.TravelDistance">
            <summary>
            Estimated total travel distance of the route.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RouteResult.AlgorithmRuntime">
            <summary>
            Amount of the time the RoutingEngine required to calculate the route.
            </summary>
        </member>
        <member name="P:OsmExplorer.Routing.RouteResult.RenderPen">
            <summary>
            Not yet implemented.
            </summary>
        </member>
        <member name="T:OsmExplorer.Spatial.RoadLink">
            <summary>
            Represents a portion of an OpenStreetMap Way between two decision 
            points (e.g. intersections, junctions, etc.). RoadLinks are thus (generally) 
            suitable for all routing applications.
            </summary>
        </member>
        <member name="M:OsmExplorer.Spatial.RoadLink.Equals(OsmExplorer.Spatial.RoadLink)">
            <summary>
            Compares two RoadLinks for equality by comparing the LinkIds.
            </summary>
            <param name="other">Another RyanOsm.Spatial.RoadLink</param>
            <returns>True if the LinkIds are equal</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.RoadLink.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current System.Object.
            </summary>
            <param name="obj">The System.Object to compare with the current System.Object.</param>
            <returns>true if the specified System.Object is equal to the current System.Object; otherwise, false.</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.RoadLink.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current System.Object.</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.RoadLink.RecursiveLoading">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.LinkId">
            <summary>
            A unique identifier for a given RoadLink. 
            RoadLinks can be tested for equality by comparing their
            LinkIds.
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.WayId">
            <summary>
            A non-unique value that associates a RoadLink with
            an OpenStreetMap way.
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.RoadCategory">
            <summary>
            Road category (0-6).
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.Name">
            <summary>
            Name of the street this RoadLink is part of.
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.HighwayName">
            <summary>
            Returns the designated highway name (eg. interstates,
            US route, state routes) if the RoadLink is a portion 
            of a highway.
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.HighwayTag">
            <summary>
            Returns the OSM highway tag
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.FirstPoint">
            <summary>
            The first point on the RoadLink equal to Points[0].
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.LastPoint">
            <summary>
            The last point on the RoadLink equal to Points[Points.Count()-1];
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.Flags">
            <summary>
            Get the set of RoadFlags that describes routing 
            constraints and other features of this RoadLink
            (see RoadLink documentation).
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.Points">
            <summary>
            Gets an array of ordered points that make up this
            RoadLink.
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.DirTravel">
            <summary>
            Indicates the direction of travel on the RoadLink.
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.GetBoundingBox">
            <summary>
            Gets a BoundingBox that contains all of the points
            in the Points array of this RoadLink.
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.RoadLink.Rectangle">
            <summary>
            Returns a Volante.RectangleR2 object containing
            all points in the Points array.
            </summary>
        </member>
        <member name="T:OsmExplorer.Exceptions.InvalidRouteStopException">
            <summary>
            Thrown when a route is attempted on a null-equivalent (uninitialized)
            LatLon coordinate (coordinates will be set to 0,0).
            </summary>
        </member>
        <member name="T:OsmExplorer.Units.Weight">
            <summary>
            Structure representing an amount of weight.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.Weight.PoundsPerKilogram">
            <summary>
            Amount of pounds per kilogram. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.Weight.PoundsPerShortTon">
            <summary>
            Amount of pounds per short ton. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.Weight.PoundsPerMetricTon">
            <summary>
            Amount of pounts per metric ton (tonne). This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.Weight.KilogramsPerPound">
            <summary>
            Amount of kilograms per pound. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.Weight.KilogramsPerShortTon">
            <summary>
            Amount of kilograms per short ton. This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.Weight.KilogramsPerMetricTon">
            <summary>
            Amount of kilograms per metric ton (tonne). This field is constant.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.Weight.MaxWeight">
            <summary>
            Represents the maximum weight value that can be assigned.
            </summary>
        </member>
        <member name="F:OsmExplorer.Units.Weight.ZeroWeight">
            <summary>
            Represents the minimum (zero) value of a Weight instance.
            </summary>
        </member>
        <member name="M:OsmExplorer.Units.Weight.#ctor(System.Single,OsmExplorer.Units.WeightUnits)">
            <summary>
            Creates a new Weight object for the specified amount and WeightUnits.
            </summary>
            <param name="weight">Weight quantity.</param>
            <param name="units">Units of weight measurement</param>
            <exception cref="T:System.ArgumentException"> Weight cannot be a negative value.</exception>
        </member>
        <member name="M:OsmExplorer.Units.Weight.op_Equality(OsmExplorer.Units.Weight,OsmExplorer.Units.Weight)">
            <summary>
            Compares two Weights for equality.
            </summary>
            <param name="w1">First Weight.</param>
            <param name="w2">Second Weight.</param>
            <returns>True if the Weights are equal.</returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.op_Inequality(OsmExplorer.Units.Weight,OsmExplorer.Units.Weight)">
            <summary>
            Compares two Weights for inequality
            </summary>
            <param name="w1">First Weight.</param>
            <param name="w2">Second Weight.</param>
            <returns></returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.op_GreaterThan(OsmExplorer.Units.Weight,OsmExplorer.Units.Weight)">
            <summary>
            Determines if a Weight is greater than another.
            </summary>
            <param name="w1">First Weight.</param>
            <param name="w2">Second Weight.</param>
            <returns>True if w1 is greater than w2.</returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.op_LessThan(OsmExplorer.Units.Weight,OsmExplorer.Units.Weight)">
            <summary>
            Determines if a Weight is less than another.
            </summary>
            <param name="w1">First Weight.</param>
            <param name="w2">Second Weight.</param>
            <returns>True if w1 is less than w2.</returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.op_GreaterThanOrEqual(OsmExplorer.Units.Weight,OsmExplorer.Units.Weight)">
            <summary>
            Determines if a Weight is greater than or equal to another.
            </summary>
            <param name="w1">First Weight.</param>
            <param name="w2">Second Weight.</param>
            <returns>True if w1 is greater than or equal to w2.</returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.op_LessThanOrEqual(OsmExplorer.Units.Weight,OsmExplorer.Units.Weight)">
            <summary>
            Determines if a Weight is less than or equal to another.
            </summary>
            <param name="w1">First Weight.</param>
            <param name="w2">Second Weight.</param>
            <returns>True if w1 is less than or equal to w2.</returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.op_Addition(OsmExplorer.Units.Weight,OsmExplorer.Units.Weight)">
            <summary>
            Sums two Weight objects.
            </summary>
            <param name="w1">First Weight.</param>
            <param name="w2">Second Weight.</param>
            <returns>The sum of Weights w1 and w2.</returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.op_Subtraction(OsmExplorer.Units.Weight,OsmExplorer.Units.Weight)">
            <summary>
            Gets the difference of two Weights.
            </summary>
            <param name="w1">First Weight.</param>
            <param name="w2">Second Weight.</param>
            <returns>Weight w1 subtracted by Weight w2.</returns>
            <exception cref="T:System.ArgumentException">The difference between w1 and w2 cannot be less than 0.</exception>
        </member>
        <member name="M:OsmExplorer.Units.Weight.op_Division(OsmExplorer.Units.Weight,OsmExplorer.Units.Weight)">
            <summary>
            Gets the ratio of two Weights.
            </summary>
            <param name="w1">First Weight.</param>
            <param name="w2">Second Weight.</param>
            <returns>The ratio of w1 and w2 (w1/w2).</returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.CompareTo(System.Object)">
            <summary>
            Compares this Weight instance to the specified object.
            </summary>
            <param name="obj">A System.Object</param>
            <returns>1 if this instance is greater than the specified object; 
            -1 if this instance is less than the specified object; 0 if they are equal.</returns>
            <exception cref="T:System.ArgumentException">Value is not a OsmExplorer.Units.Weight.</exception>
        </member>
        <member name="M:OsmExplorer.Units.Weight.CompareTo(OsmExplorer.Units.Weight)">
            <summary>
            Compares this Weight to another.
            </summary>
            <param name="other">Another Weight.</param>
            <returns>1 if this instance is greater than the specified object; 
            -1 if this instance is less than the specified object; 0 if they are equal.</returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.Equals(OsmExplorer.Units.Weight)">
            <summary>
            Determines if this Weight instance is equal to another.
            </summary>
            <param name="other">Another Weight.</param>
            <returns>True if this Weight is equal in amount to the other.</returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this Weight instance is equal to the specified object.
            </summary>
            <param name="obj"> An object to compare with this Weight instance.</param>
            <returns>True if obj is a Weight and equal in amount to this instance; otherwise false.</returns>
        </member>
        <member name="M:OsmExplorer.Units.Weight.GetHashCode">
            <summary>
            Returns a hash code for this Weight instance.
            </summary>
            <returns>A 32-bit signed integer hash code for this Weight instance.</returns>
        </member>
        <member name="P:OsmExplorer.Units.Weight.Pounds">
            <summary>
            Returns the Weight instance in units of pounds (lbs).
            </summary>
        </member>
        <member name="P:OsmExplorer.Units.Weight.Kilograms">
            <summary>
            Returns the Weight instance in units of kilograms (kgs).
            </summary>
        </member>
        <member name="P:OsmExplorer.Units.Weight.ShortTons">
            <summary>
            Returns the Weight instance in units of short tons.
            </summary>
        </member>
        <member name="P:OsmExplorer.Units.Weight.MetricTons">
            <summary>
            Returns the Weight instance in units of metric tons (tonnes).
            </summary>
        </member>
        <member name="T:OsmExplorer.Exceptions.DatabaseLoadErrorException">
            <summary>
            Error thrown when a .dbf file fails to load. Check that 
            the file is located in the /bin folder along with the application executable.
            The DatabaseRepository uses Directory.GetCurrentDirectory() to look
            in the executable directory for the MapData.dbs file
            and maintains an open database connection while an application is running.
            </summary>
        </member>
        <member name="T:OsmExplorer.Exceptions.RoutingDataNotFoundException">
            <summary>
            Exception thrown when the RoutingEngine fails to locate a .dbs data file.
            </summary>
        </member>
        <member name="T:OsmExplorer.Exceptions.DataRepositoryNotOpenException">
            <summary>
            Exception thrown when the DataRepository is not open. This usually occurs when a .dbs
            file fails to load.
            </summary>
        </member>
        <member name="T:OsmExplorer.Data.SpatialQuery">
            <summary>
            Provides methods for querying the spatial database contained in the .dbs file.
            </summary>
        </member>
        <member name="M:OsmExplorer.Data.SpatialQuery.QueryLink(OsmExplorer.Spatial.LatLon)">
            <summary>
            Queries the nearest RoadLink to the given LatLon coordinate. Useful for obtaining
            RoadLink information and as a hook for arc-based routing engines.
            </summary>
            <param name="Position">Query location.</param>
            <returns>Nearest RoadLink to the queried location.</returns>
            <exception cref="T:OsmExplorer.Exceptions.DataRepositoryNotOpenException"> Thrown when the DataRepository is not open or failed to load.</exception>
            <exception cref="T:OsmExplorer.Exceptions.RoadLinksNotFoundException">Thrown when a RoadLink could not be located near the specified location.</exception>
        </member>
        <member name="M:OsmExplorer.Data.SpatialQuery.QueryLinks(OsmExplorer.Spatial.BoundingBox,OsmExplorer.Data.QueryMode)">
            <summary>
            Queries all links within the provided BoundingBox. Note that large quieries
            can throw OutOfMemoryExceptions and make for extremely slow map rendering,
            so be conservative with BoundingBox size.
            </summary>
            <param name="bbox">BoundingBox to query RoadLinks</param>
            <param name="qmode">Query mode (see QueryMode documentation).</param>
            <returns>Array of RoadLinks</returns>
        </member>
        <member name="M:OsmExplorer.Data.SpatialQuery.QueryLinks(OsmExplorer.Spatial.BoundingBox,OsmExplorer.Data.QueryMode,OsmExplorer.Data.RoadCategory[])">
            <summary>
            Queries all links within the provided BoundingBox and are of the specified 
            RoadCategory(s) (see RoadCategory enum for more info). Note that large quieries
            can throw OutOfMemoryExceptions and make for extremely slow map rendering,
            so be conservative with BoundingBox size.
            </summary>
            <param name="bbox">BoundingBox to query RoadLinks</param>
            <param name="qmode">Query mode</param>
            <param name="category">RoadCategory filter</param>
            <returns></returns>
        </member>
        <member name="T:OsmExplorer.Data.QueryMode">
            <summary>
            Query mode for BoundingBox queries. See remarks.
            </summary>
        </member>
        <member name="F:OsmExplorer.Data.QueryMode.Contains">
            <summary>
            When selected, a BoundingBox query returns only items with
            BoundingBoxes entirely within the query box.
            </summary>
        </member>
        <member name="F:OsmExplorer.Data.QueryMode.Overlaps">
            <summary>
            When selected, a BoundingBox query returns items whose BoundingBoxes
            are either contained within the query box or overlap it. Note that a RoadLink
            that otherwise appears completely outside the querying BoundingBox can be included
            since RoadLink BoundingBoxes are constructed as the smallest rectangle that contains
            all points in the Points array.
            </summary>
        </member>
        <member name="T:OsmExplorer.Collections.PriorityStack`2">
            <summary>
            Maintains a set of items sorted by priority with O(log n) insertion and removal.
            </summary>
            <typeparam name="P">IComparable value type</typeparam>
            <typeparam name="T">Item type to sort by priority</typeparam>
        </member>
        <member name="M:OsmExplorer.Collections.PriorityStack`2.#ctor">
            <summary>
            Creates a new PriorityStack with the default comparer 
            (items sorted smallest to largest).
            </summary>
        </member>
        <member name="M:OsmExplorer.Collections.PriorityStack`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Creates a new PriorityStack with the specified IComparer
            </summary>
            <param name="comparer">A comparer for the priority values</param>
        </member>
        <member name="M:OsmExplorer.Collections.PriorityStack`2.Push(`0,`1)">
            <summary>
            Adds an item with a specified priority to the PriorityStack
            </summary>
            <param name="priority">Priority value</param>
            <param name="value">Item to be added</param>
            <remarks>This is an O(log n) operation where n is the number of items in the PriorityStack</remarks>
        </member>
        <member name="M:OsmExplorer.Collections.PriorityStack`2.Pop">
            <summary>
            Removes and returns the item at the top of the priority stack
            </summary>
            <returns>Item with highest priority</returns>
            <remarks>This is an O(log n) operation where n is the number of items in the PriorityStack</remarks>
        </member>
        <member name="M:OsmExplorer.Collections.PriorityStack`2.Peek">
            <summary>
            Returns the item at the top of the PriorityStack without removing it.
            </summary>
            <returns>The item with the highest priority</returns>
            <remarks>This is an O(1) operation</remarks>
        </member>
        <member name="P:OsmExplorer.Collections.PriorityStack`2.IsEmpty">
            <summary>
            Returns whether the PriorityStack is empty or not. This is an O(1) operation.
            </summary>
        </member>
        <member name="P:OsmExplorer.Collections.PriorityStack`2.Count">
            <summary>
            Number of items in the PriorityStack.
            </summary>
        </member>
        <member name="T:OsmExplorer.MapExplorer">
            <summary>
            Map Explorer
            </summary>
        </member>
        <member name="M:OsmExplorer.MapExplorer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.Paint event.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data</param>
        </member>
        <member name="M:OsmExplorer.MapExplorer.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:OsmExplorer.MapExplorer.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:OsmExplorer.MapExplorer.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="P:OsmExplorer.MapExplorer.ZoomScales">
            <summary>
            A predetermined list of discrete scales that can be
            used, for example, to provide a linear zoom range for a scrollbar.
            </summary>
        </member>
        <member name="P:OsmExplorer.MapExplorer.QueriedLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:OsmExplorer.MapExplorer.LonScale">
            <summary>
            Scale - longitude degrees per pixel
            </summary>
        </member>
        <member name="P:OsmExplorer.MapExplorer.HighlightCoordinates">
            <summary>
            
            </summary>
        </member>
        <member name="E:OsmExplorer.MapExplorer.ViewChanged">
            <summary>
            Event raised when the view parameters are changed.
            For example, by the user dragging the map. This event is not raised
            when the change is made by the client, e.g. by setting the relevant
            properties.
            </summary>
        </member>
        <member name="E:OsmExplorer.MapExplorer.MouseMoved">
            <summary>
            Event raised when the mouse is moved in the map window.
            </summary>
        </member>
        <member name="E:OsmExplorer.MapExplorer.RenderPointClicked">
            <summary>
            Event raised when the user clicks a RenderPoint.
            </summary>
        </member>
        <member name="T:OsmExplorer.Exceptions.RouteStopTooFarAwayException">
            <summary>
            Exception thrown when a route stop is too far away from the closest 
            traversable street. The routing engine will search for several kilometers
            around the start and end locations for a suitable street to start routing on,
            so this will most often be the result of insufficient (i.e. non-existent) map
            data. Make sure the MapData.dbs file contains map data for the region
            you are trying to route on.
            </summary>
        </member>
        <member name="T:OsmExplorer.Data.DataRepository">
            <summary>
            The DataRepository class loads and manages the MapData.dbs data file 
            for routing and spatial queries on OSM data. The LoadRepository() method 
            should be called upon initialization of the application's components. See
            remarks.
            </summary>
            <remarks> The DataRepository is based on a slightly modified version of the
            Volante embedded .NET database engine (see http://blog.kowalczyk.info/software/volante/database.html 
            for more info) and utilitizes Volante's spatial and B-tree database indexing.</remarks>
        </member>
        <member name="M:OsmExplorer.Data.DataRepository.LoadRepository">
            <summary>
            Loads the DataRepository from the current directory.
            </summary>
            <exception cref="T:OsmExplorer.Exceptions.DatabaseLoadErrorException"> Thrown when the .dbs data file is
            not found in the current directory.</exception>
        </member>
        <member name="M:OsmExplorer.Data.DataRepository.LoadRepository(System.IO.FileInfo)">
            <summary>
            Loads the DataRepository from the specified directory.
            </summary>
            <param name="info"></param>
            <exception cref="T:OsmExplorer.Exceptions.DatabaseLoadErrorException"> Thrown when the .dbs data file is
            not found in the specified directory.</exception>
        </member>
        <member name="P:OsmExplorer.Data.DataRepository.WrappingBox">
            <summary>
            Returns the minimum BoundingBox that encloses the BoundingBoxes
            of all elements in the current data file.
            </summary>
        </member>
        <member name="T:OsmExplorer.Routing.RoutingStrategy">
            <summary>
            Sets the routing strategy for a route.
            </summary>
        </member>
        <member name="F:OsmExplorer.Routing.RoutingStrategy.Fastest">
            <summary>
            Strategy that indicates the RoutingEngine should attempt
            to find the quickest route.
            </summary>
        </member>
        <member name="F:OsmExplorer.Routing.RoutingStrategy.Shortest">
            <summary>
            Strategy that indicates the RoutingEngine should attempt
            to find the shortest route.
            </summary>
        </member>
        <member name="T:OsmExplorer.Spatial.LatLon">
            <summary>
            Class that represents a latitude/longitude pair.
            </summary>
        </member>
        <member name="M:OsmExplorer.Spatial.LatLon.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a LatLon from a latitude and longitude value
            </summary>
            <param name="lat"></param>
            <param name="lon"></param>
        </member>
        <member name="M:OsmExplorer.Spatial.LatLon.#ctor(System.String)">
            <summary>
            Constructs a LatLon from a comma-separated string 
            representation of a coordinate e.g. "Lat,Lon"
            </summary>
            <param name="latlon">String representation of coordinate</param>
        </member>
        <member name="M:OsmExplorer.Spatial.LatLon.op_Equality(OsmExplorer.Spatial.LatLon,OsmExplorer.Spatial.LatLon)">
            <summary>
            Determines if two LatLons are equal based on either their Ids
            (in the case of LatLons derived from OSM nodes) or by comparing
            their Lat and Lon values.
            </summary>
            <param name="a">First LatLon</param>
            <param name="b">Second LatLon</param>
            <returns>True if the LatLons are determined to be equal</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.LatLon.op_Inequality(OsmExplorer.Spatial.LatLon,OsmExplorer.Spatial.LatLon)">
            <summary>
            Determines if two LatLons are inequal based on either their Ids
            (in the case of LatLons derived from OSM nodes) or by comparing
            their Lat and Lon values.
            </summary>
            <param name="a">First LatLon</param>
            <param name="b">Second LatLon</param>
            <returns>False if the LatLons are determined to be inequal</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.LatLon.DistanceTo(OsmExplorer.Spatial.LatLon)">
            <summary>
            Calculates the geodesic (world line) distance between 
            this LatLon and another.
            </summary>
            <param name="other">Another LatLon coordinate.</param>
            <returns>DistanceSpan representing the distance interval.</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.LatLon.PDistanceTo(OsmExplorer.Spatial.LatLon)">
            <summary>
            Calulates the Pythagorean (flat-earth) distance to another LatLon. See remarks.
            </summary>
            <param name="other">Another LatLon coordinate.</param>
            <returns>DistanceSpan representing the distance interval.</returns>
            <remarks>The Pythagorean distance assumes the world is flat. For short-
            distance calculations this can be an acceptable approximation and may be
            preferred for multiple repeat calculations (slightly less than half as expensive
            as DistanceTo method).</remarks>
        </member>
        <member name="M:OsmExplorer.Spatial.LatLon.ToString">
            <summary>
            Converts the LatLon to a string representation.
            </summary>
            <returns>String representation of the LatLon</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.LatLon.GetHashCode">
            <summary>
            Returns the hash code for this LatLon instance.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this LatLon instance.</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.LatLon.Equals(System.Object)">
            <summary>
            Determines if this LatLon is equal to the specified object
            </summary>
            <param name="obj">The specified object</param>
            <returns>True when the LatLon is equal to the specified object</returns>
        </member>
        <member name="M:OsmExplorer.Spatial.LatLon.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo with the data
            needed to serialize a LatLon object
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo to 
            populate with data</param>
            <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) 
            for this serialization.</param>
        </member>
        <member name="P:OsmExplorer.Spatial.LatLon.Id">
            <summary>
            A unique identifier of a LatLon derived from the
            OpenStreetMap Node Id. 
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.LatLon.Lat">
            <summary>
            The Latitude (y-coordinate) of the LatLon
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.LatLon.Lon">
            <summary>
            The Longitude (x-coordinate) of the LatLon
            </summary>
        </member>
        <member name="P:OsmExplorer.Spatial.LatLon.IsValid">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
