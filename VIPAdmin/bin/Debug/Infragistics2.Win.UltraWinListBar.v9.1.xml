<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics2.Win.UltraWinListBar.v9.1</name>
    </assembly>
    <members>
        <member name="M:Infragistics.Shared.LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name
            </summary>
            <param name="value">Name of the category to retreive</param>
            <returns>The localized string value</returns>
        </member>
        <member name="M:Infragistics.Shared.UltraLicenseAttribute.GetLicensedWithProducts">
            <summary>
            Return the list of products that this control can be licensed with
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.Serialization.Binder">
            <summary>
            Controls class loading and mandates what class to load.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Serialization.Binder.BindToType(System.String,System.String)">
            <summary>
            Controls the binding of a serialized object to a type
            </summary>
            <param name="assemblyName">Specifies the Assembly name of the serialized object</param>
            <param name="typeName">Specifies the Type name of the serialized object.</param>
            <returns>The type of the object the formatter creates a new instance of.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.Orientation">
             <summary>
             Enumerator used to determine the orientation of the UltraWinListBar.
             </summary>
             <remarks>
             <p class="body">The <see cref="T:Infragistics.Win.UltraWinListBar.Orientation"/> enumerator is used to set the display orientation of the UltraWinListBar.  The UltraWinListBar can be displayed vertically or horizontally.  If you would like the orientation to be vertical, set the enumerator equal to zero or use this code:</p>
             <p class="code">UltraListBar1.Orientation = Infragistics.Win.UltraWinListBar.Orientation.Vertical</p>
             <p class="body">If you would like the orientation to be horizontal, you can set the property equal to one or use this code:</p>
             <p class="code">UltraListBar1.Orientation = Infragistics.Win.UltraWinListBar.Orientation.Horizontal</p>
             <p class="body">When retrieving the value of this property, the enumerator 0 (vertical) or 1 (horizontal) will be returned.</p>
             </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.Orientation.Vertical">
            <summary>
            The UltraListBar will be oriented vertically.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.Orientation.Horizontal">
            <summary>
            The UltraListBar will be oriented horizontally.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.Style">
             <summary>
             Enumerator used to determine the presentation style of the icons for Items within a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/>.
             </summary>
             <remarks>
             <p class="body">The <see cref="T:Infragistics.Win.UltraWinListBar.Style"/> enumerator is used to set the size of the icons used for the Items within a Group.  If you want to set the style to use large icons (32 x 32), then set the enumerator equal to 0 or use this code:</p>
             <p class="code">UltraListBar1.DefaultStyle = Infragistics.Win.UltraWinListBar.Style.LargeIcons</p>
             <p class="body">If you would like to set the style to use small icons (16 x 16), set the enumerator equal to one or use this code:</p>
             <p class="code">UltraListBar1.DefaultStyle = Infragistics.Win.UltraWinListBar.Style.SmallIcons</p>
             <p class="body">When retrieving this property, the enumerator 0 (large icons) or 1 (small icons) will be returned.</p>
             </remarks>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.Style.LargeIcons">
            <summary>
            Use large icons (32 x 32).
            </summary>		
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.Style.SmallIcons">
            <summary>
            Use small icons (16 x 16).
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.ContextMenuAction">
            <summary>
            Enumeration of actions which can be performed using the default context menu
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.ContextMenuAction.RemoveGroup">
            <summary>
            Remove Group
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.ContextMenuAction.AddGroup">
            <summary>
            Add Group
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.ContextMenuAction.RemoveItem">
            <summary>
            Remove Item
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.ContextMenuAction.AddItem">
            <summary>
            Add Item
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.ContextMenuAction.LargeIcons">
            <summary>
            LargeIcons
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.GroupEventHandler">
            <summary>
            Delegate for handling events that take <see cref="T:Infragistics.Win.UltraWinListBar.GroupEventArgs"/> as one of the event arguments.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.ItemEventHandler">
            <summary>
            Delegate for handling events that take <see cref="T:Infragistics.Win.UltraWinListBar.ItemEventArgs"/> as one of the event arguments.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.BeforeDefaultContextMenuClickEventHandler">
            <summary>
            Delegate for handling events that take <see cref="T:Infragistics.Win.UltraWinListBar.BeforeDefaultContextMenuClickArgs"/> as one of the event arguments. 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.AfterDefaultContextMenuClickEventHandler">
            <summary>
            Delegate for handling events that take <see cref="T:Infragistics.Win.UltraWinListBar.AfterDefaultContextMenuClickEventHandler"/> as one of the event arguments. 
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.GroupEventArgs">
            <summary>
            Event parameters used for events that take a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> as one of its arguments.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupEventArgs.#ctor(Infragistics.Win.UltraWinListBar.Group)">
            <summary>
            Constructor for the  class that uses a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> as a parameter.
            </summary>
            <param name="group">the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/></param>        
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupEventArgs.Group">
            <summary>
            Read-only property that returns the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> associated with the <see cref="T:Infragistics.Win.UltraWinListBar.GroupEventArgs"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.ItemEventArgs">
            <summary>
            Event parameters used for events that take an Item as one of its arguments.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemEventArgs.#ctor(Infragistics.Win.UltraWinListBar.Item)">
            <summary>
            Constructor for the <see cref="T:Infragistics.Win.UltraWinListBar.ItemEventArgs"/> class that uses an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> as a parameter.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemEventArgs.Item">
            <summary>
            Read-only property that returns the <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> associated with the <see cref="T:Infragistics.Win.UltraWinListBar.GroupEventArgs"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.BeforeDefaultContextMenuClickArgs">
            <summary>
            Event params used in BeforeDefaultContextMenuClick
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.BeforeDefaultContextMenuClickArgs.#ctor(System.Object,Infragistics.Win.UltraWinListBar.ContextMenuAction)">
            <summary>
            Constructor for the <see cref="T:Infragistics.Win.UltraWinListBar.BeforeDefaultContextMenuClickArgs"/>
            </summary>
            <param name="context">Context of item being modified, can be an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> or <see cref="T:Infragistics.Win.UltraWinListBar.Group"/></param>
            <param name="action"><see cref="T:Infragistics.Win.UltraWinListBar.ContextMenuAction"/> specifying the action taking place.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.BeforeDefaultContextMenuClickArgs.Context">
            <summary>
            Context of item affected by action.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.BeforeDefaultContextMenuClickArgs.Action">
            <summary>
            Action ID specifying current context menu action.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.AfterDefaultContextMenuClickArgs">
            <summary>
            Event params used in AfterDefaultContextMenuClick
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.AfterDefaultContextMenuClickArgs.#ctor(System.Object,Infragistics.Win.UltraWinListBar.ContextMenuAction)">
            <summary>
            Constructor for the <see cref="T:Infragistics.Win.UltraWinListBar.BeforeDefaultContextMenuClickArgs"/>
            </summary>
            <param name="context">Context of item being modified, can be an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> or <see cref="T:Infragistics.Win.UltraWinListBar.Group"/></param>
            <param name="action"><see cref="T:Infragistics.Win.UltraWinListBar.ContextMenuAction"/> specifying the action taking place.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.AfterDefaultContextMenuClickArgs.Context">
            <summary>
            Context of item affected by action.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.AfterDefaultContextMenuClickArgs.Action">
            <summary>
            Action ID specifying current context menu action.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.Group">
            <summary>
            The Group object is the container object for all items housed at a single level within the UltraListBar.  There may be several groups within the Groups collection.
            </summary>
            <remarks>
            <p class="body">Before adding an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> to the UltraListBar, you must first have a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> object. You can access all the items within a group through the Group object's ItemsCollection. When a group is added and the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> of the group has not been specified, the default text is "New Group". The following code adds a group to the end of the collection:</p>
            <p class="code">UltraListBar1.Groups.Add()</p>
            <p class="body">You may also add a group and pass it a unique <b>Key</b>.</p>
            <p class="code">UltraListBar1.Groups.Add("First Group")</p>
            <p class="body">Additionally, you may assign the text to the group at this time.</p>
            <p class="code">UltraListBar1.Groups.Add("Second Group", "Test Text")</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.#ctor">
            <summary>
            Default constructor used to create a new Group object.
            </summary>
            <remarks>
            <p class="body">This constructor will create a new <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> object and give it an empty ItemsCollection.  It will assign the value "New Group" to the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> property.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.#ctor(System.Boolean)">
            <summary>
            Serialization constructor for the Group class.
            </summary>
            <remarks>
            <p class="body">This constructor uses a Boolean value to determine if the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> was <see cref="P:Infragistics.Win.UltraWinListBar.Group.Selected"/> while it was being serialized.</p>
            </remarks>
            <param name="selected">True to indicate that this is the selected group.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.Rename">
            <summary>
            Method used to display a textbox control over the group header so that the user can change the group's display text.
            </summary>
            <remarks><p class="body">The <b>Rename</b> method will allow the user to change the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> property of a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/>.</p>
            <p class="code">UltraListBar1.Groups(0).Rename()</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization of the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>		
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the collection of Group objects.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.OnDispose">
            <summary>
            Called when the group is disposed.
            </summary>
            <remarks>
            <p class="body"><b>OnDisposed</b> sets the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> object to null when the <b>Dispose</b> method has been called.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ShouldSerializeItems">
            <summary>
            Returns true if there are any items whose properties are not equal to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ResetItems">
            <summary>
            Method used to clear the items collection.
            </summary>
            <remarks>
            <p class="body">This method will clear every <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> from the items collection of a group.</p>
            <p class="code">UltraListBar1.Groups(0).Items.Clear()</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when any property on a sub object has changed.
            </summary>
            <param name="propChangeInfo">PropChangeInfo contains information on which subobject changed and which property of the subobject changed.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Returns the Appearance properties to their default values before rendering the item display area of the selected group.
            </summary>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ResolveHeaderAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Returns the Appearance properties to their default values before rendering the <see cref="T:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement"/> of the selected group.
            </summary>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ResolveItemAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Returns the Appearance properties to their default values before rendering the items of the selected group.
            </summary>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ShouldSerializeText">
            <summary>
            Method that returns true if the current text is not the default text.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ResetText">
            <summary>
            Method used to set the text of the group back to its default value.
            </summary>
            <remarks>
            <p class="body">If a default value for the <b>Text</b> of the group was not explicitly assigned, then the default value of the text property is "New Group".</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ToString">
            <summary>
            Method used to return the Text property.
            </summary>
            <remarks>
            <p class="body">The <b>ToString</b> method is used to return the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> property as a string variable.</p>
            <p class="code">MsgBox(UltraListBar1.Groups(0).ToString())</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ShouldSerializeStyle">
            <summary>
            Returns true if the default style does not match the current setting of the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Style"/> property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ResetStyle">
            <summary>
            Method used to reset the style back to the default value.
            </summary>
            <remarks>
            <p class="body">The <b>ResetStyle</b> method allows you to set the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Style"/> property of the group back to its default value.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ShouldSerializeAppearance">
            <summary>
            Returns true if the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Appearance"/> object has any non-default property values set.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ResetAppearance">
            <summary>
            Method that resets all Appearance properties to their default values.
            </summary>
            <remarks>
            <p class="body">The <b>ResetAppearance</b> method gives you the ability to undo all changes made to the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Appearance"/> of the group and revert the Appearance property values back to their defaults.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ShouldSerializeItemAppearance">
            <summary>
            Returns true if the Appearance object assigned to the <see cref="P:Infragistics.Win.UltraWinListBar.Group.ItemAppearance"/> property of the group has any non-default property values set.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ResetItemAppearance">
            <summary>
            Method that resets all the Appearance property values for the <see cref="P:Infragistics.Win.UltraWinListBar.Group.ItemAppearance"/> back to their defaults.
            </summary>
            <remarks>
            <p class="body">This method gives you the ability to undo all changes made to the appearance of the items within the group and revert the Appearance property values back to their defaults.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ShouldSerializeHeaderAppearance">
            <summary>
            Read-only property that returns true if the Appearance object assigned to the <see cref="P:Infragistics.Win.UltraWinListBar.Group.HeaderAppearance"/> has any non-default property values set.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.ResetHeaderAppearance">
            <summary>
            Method used to reset the Appearance properties of the <see cref="P:Infragistics.Win.UltraWinListBar.Group.HeaderAppearance"/> to their default values.
            </summary>
            <remarks>
            <p class="body">The <b>ResetHeaderAppearance</b> method gives you the ability to undo all changes made to the appearance of the group's header and revert the Appearance property values back to their defaults.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Invoked during the serialization of the object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>		
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.OnDeserialization(System.Object)">
            <summary>
            Invoked after the entire object graph has been deserialized.
            </summary>
            <param name="sender">The object that initiated the callback. The functionality for the this parameter is not currently implemented.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.Index">
            <summary>
            Read-only property that returns the index of the group within the GroupsCollection.
            </summary>
            <remarks>
            <p class="body">The <b>Index</b> property of the group is useful in returning a specific group's index within the collection after the collection has been manipulated.  It is recommended that you assign a <b>Key</b> to an added group whenever possible and manipulate groups according to their key and not their index.</p>
            <p class="code">Dim grpIndex As VariantType</p>
            <p class="code">grpIndex = (UltraListBar4.Groups("First Group").Index())</p>
            <p class="code">MsgBox(grpIndex)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.Items">
            <summary>
            Read-only property that returns the collection of items contained within the group.
            </summary>
            <remarks>
            <p class="body">The <b>Items</b> property of the group gives you the ability to manipulate the Items collection as a whole and the each <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> within the collection.  For example, you can add items to the collection: </p>
            <p class="code">UltraListBar1.Groups(0).Items.Add("Key","Text")</p>
            <p class="body">You can also add an <see cref="P:Infragistics.Win.UltraWinListBar.Item.Appearance"/> object to the items within the collection: </p>
            <p class="code">UltraListBar1.Groups(0).Items("Key").Appearance = appearance</p>
            <p class="note">The appearance variable in the above sample code must be declared in this manner: </p>
            <p class="code">Dim appearance As Infragistics.Win.AppearanceBase</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.Selected">
            <summary>
            Property that gets/sets whether this group is the selected group.
            </summary>
            <remarks>
            <p class="body">Setting the <b>Selected</b> property equal to true causes the group to be selected. This property can also be used to return if the group is currently selected.</p>
            <p class="code">UltraListBar1.Groups(0).Selected = True</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.Control">
            <summary>
            Read-only property that returns the control that contains the group.
            </summary>
            <remarks>
            <p class="body">The <b>UltraListBar</b> property allows you to work with the control object that contains the group.  You can manipulate the control using the returned reference.</p>
            <p class="code">Dim thisControl As Infragistics.Win.UltraWinListBar.UltraListBar</p>
            <p class="code">thisControl = UltraListBar1.Groups(0).Control()</p>
            <p class="code">thisControl.BorderStyle = Infragistics.Win.UIElementBorderStyle.Dashed</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.Text">
            <summary>
            Property that gets/sets the caption text for a group.
            </summary>
            <remarks>
            <p class="body">The <b>Text</b> property uses a string variable to determine the text that will be displayed for a group.</p>
            <p class="code">UltraListBar1.Groups(0).Text = "Group Text"</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.Style">
            <summary>
            Property that gets/sets the style (large or small icons) of this group.
            </summary>
            <remarks>
            <p class="body">The <b>Style</b> property determines the size of the icons used for the items within a group.  You may use large (32 x 32) or small (16 x 16) icons. This property will return an enumerator: 0 for large icons and 1 for small icons.</p>
            <p class="code">UltraListBar1.Groups(0).Style = Infragistics.Win.UltraWinListBar.Style.LargeIcons</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.UIElement">
            <summary>
            Returns the main UIElement for the group.
            </summary>
            <remarks>
            <p class="body">The group's <b>UIElement</b> property returns the user interface element associated with the group.  This is useful in manipulating the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Appearance"/> of individual groups.</p>
            <p class="code">MsgBox(UltraListBar4.Groups(0).UIElement.IsFullyVisible)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.Appearance">
            <summary>
            Gets/sets the Appearance object for the group.
            </summary>
            <remarks>
            <p class="body">The <b>Appearance</b> property gets/sets the Appearance object assigned to the group. The Appearance object allows you to create appearances that can be assigned to many different objects. Therefore, the Appearance object saves you valuable time that would otherwise be spent setting formatting properties for each object.</p>
            <p class="code">Dim myAppearance As Infragistics.Win.AppearanceBase</p>
            <p class="code">myAppearance.BorderAlpha = Infragistics.Win.Alpha.Transparent</p>
            <p class="code">UltraListBar1.Groups(0).Appearance = myAppearance</p>
            <p class="body">You could also go directly through the appearance object of each group to assign formatting properties.</p>
            <p class="code">UltraListBar1.Groups(0).Appearance.BorderAlpha = Infragistics.Win.Alpha.Transparent</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.HasAppearance">
            <summary>
            Read-only property that returns true if an Appearance object has been assigned to the group.
            </summary>
            <remarks>
            <p class="body">The <b>HasAppearance</b> property returns true if an <see cref="P:Infragistics.Win.UltraWinListBar.Group.Appearance"/> object has been assigned to the group.  This property allows you to check if the group has an appearance before assigning one to the group.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.ItemAppearance">
            <summary>
            Returns the default <see cref="P:Infragistics.Win.UltraWinListBar.Group.ItemAppearance"/> object assigned to the items within the group.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.HasItemAppearance">
            <summary>
            Read-only property that returns true if an Appearance object has been assigned to the ItemAppearance property of the group.
            </summary>
            <remarks>
            <p class="body">The <b>HasItemAppearance</b> property is used to determine if the group's Items collection has been assigned an <see cref="P:Infragistics.Win.UltraWinListBar.Group.ItemAppearance"/> object.  Keep in mind that all items within a group can be assigned separate Appearance objects.  The following code assigns an Appearance object to every item within the group.</p>
            <p class="code">UltraListBar1.Groups(0).ItemAppearance = myAppearance</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.HeaderAppearance">
            <summary>
            Property that gets/sets the Appearance object for the group's header area.
            </summary>
            <remarks>
            <p class="body">The <b>HeaderAppearance</b> property gets/sets the Appearance object assigned to the group's header. The Appearance object allows you to create appearances that can be assigned to many different objects. Therefore, the Appearance object saves you valuable time that would otherwise be spent setting formatting properties for each object.</p>
            <p class="code">Dim myAppearance As Infragistics.Win.AppearanceBase</p>
            <p class="code">myAppearance.BorderAlpha = Infragistics.Win.Alpha.Transparent</p>
            <p class="code">UltraListBar4.Groups(0).HeaderAppearance = myAppearance</p>
            <p class="body">You could also go directly through the appearance object of each group to assign formatting properties.</p>
            <p class="code">UltraListBar4.Groups(0).HeaderAppearance.BorderAlpha = Infragistics.Win.Alpha.Transparent</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Group.HasHeaderAppearance">
            <summary>
            Read-only property that returns true if an Appearance object has been assigned to the header of the group.
            </summary>
            <remarks>
            <p class="body">The <b>HasHeaderAppearance</b> property returns true if a <see cref="P:Infragistics.Win.UltraWinListBar.Group.HeaderAppearance"/> object has been assigned to the group's header.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.Group.GroupTypeConverter">
            <summary>
            TypeConverter for an UltraWinListBar Group.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.GroupTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Indicates which types the class can be cast to.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>A boolean indicating if the class can be converted to the specified type.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Group.GroupTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">Object to convert.</param>
            <param name="destinationType">Type to which the object is to be converted.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement">
            <summary>
            This class encapsulates the drawn UIElement associated with the header for a group.
            </summary>
            <remarks>
            <p class="body">The <b>GroupHeaderUIElement</b> behaves like a button and contains the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> associated with the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/>.  When the header is clicked, items contained within the group's Items collection become visible.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Constructor used to create a GroupHeaderUIElement.  The parameter that must be passed is a UIElement.
            </summary>
            <param name="parent">The parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the <see cref="P:Infragistics.Win.UltraWinListBar.Group.HeaderAppearance"/> structure for this GroupHeaderUIElement.
            </summary>
            <param name="appearance">The appearance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement.PositionChildElements">
            <summary>
            Positions the child elements for this group.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement.DrawTheme(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Handles rendering the theme appearance for the GroupHeaderUIElement.
            </summary>
            <param name="drawParams">The <see cref="T:Infragistics.Win.UIElementDrawParams"/> used to provide rendering information.</param>
            <returns>A boolean indicating if it rendered as a themed element.</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement.Group">
            <summary>
            Returns the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> associated with the GroupHeaderUIElement.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement.Cursor">
            <summary>
            Returns the cursor of the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> associated with the GroupHeaderUIElement.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement.TextRect">
            <summary>
            Returns the rectangle that houses the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> within the GroupHeaderUIElement.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement.ButtonStyle">
            <summary>
            Gets the ButtonStyle setting for the GroupHeaderUIElement.
            </summary>
            <remarks>
            <p class="body">The <b>ButtonStyle</b> property of the GroupHeaderUIElement has twelve settings.  These settings are: Borderless, Button, Button3D, ButtonSoft, ButtonSoftExtended, Default, Flat, FlatBorderless, PopUp, PopUpBorderless, PupUpSoft and PopUpSoftBorderless.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.GroupItemAreaUIElement">
            <summary>
            This class encapsulates the drawn UIElement associated with the items' area for a group.   
            </summary>
            <remarks>
            <p class="body">The <b>GroupItemAreaUIElement</b> class contains the <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> icons associated with each visible <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> within the UltraListBar.  The item icons behave as buttons.  The GroupItemAreaUIElement also consists of the drawn rectangle that holds the items' icons.</p> 
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupItemAreaUIElement.#ctor(Infragistics.Win.UIElement)">
            <summary>
            Default constructor used to create the GroupItemAreaUIElement.  Needs a UIElement passed as a parameter.
            </summary>
            <param name="parent">The parent element</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupItemAreaUIElement.PositionChildElements">
            <summary>
            Positions the child elements for this group.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupItemAreaUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Appearance"/> for the GroupItemAreaUIElement.
            </summary>
            <param name="appearance">The appearance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupItemAreaUIElement.Group">
            <summary>
            Returns the parent <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> of the GroupItemAreaUIElement.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupItemAreaUIElement.Cursor">
            <summary>
            Returns the cursor of the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> associated with the GroupItemAreaUIElement.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupItemAreaUIElement.BorderStyle">
            <summary>
            Returns the BorderStyle of the GroupItemAreaUIElement.
            </summary>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.BorderStyle"/> property has ten settings.  These settings are: Dashed, Default, Dotted, Etched, Inset, InsetSoft, None, Raised, RaisedSoft and Solid.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.GroupsCollection">
            <summary>
               A collection of <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> objects. The Group object is the container object for every <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> housed at a single level within the UltraListBar.  The Groups collection allows you to manipulate all the groups within the collection at a common parent level.
            </summary>
            <remarks>
            <p class="body">Before adding any items to the UltraListBar, you must first have a Group object. When a group is added and the text of the group has not been specified, the default text is New Group. The following code adds a group to the end of the collection:</p>
            <p class="code">UltraListBar1.Groups.Add()</p>
            <p class="body">You may also add a group and pass it a unique key as well as determine the text of the group.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization of the GroupsCollection.  The parameters for this constructor are SerializationInfo and StreamingContext.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>		
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialize the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.Add(System.Object)">
            <summary>
            Method that adds a specific group to the end of the collection.
            </summary>
            <remarks>
            <p class="body">The <b>Add</b> method is an overloaded method.  This version of the Add method adds a specified <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> object to the end of the collection. </p>
            <p class="code">UltraListBar1.Groups.Add(New Infragistics.Win.UltraWinListBar.Group())</p>
            </remarks>
            <param name="value">Must be a group</param>
            <returns>The index at which the object was added to the collection.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a group from the GroupsCollection.
            </summary>
            <remarks>
            <p class="body">The <b>Remove</b> method must be passed a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> as a parameter.</p>
            <p class="code">UltraListBar1.Groups.Remove(UltraListBar1.Groups(0))</p>
            </remarks>
            <param name="value">Must be a group</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.RemoveAt(System.Int32)">
            <summary>
            Method that removes a group from the GroupsCollection based on the index of the group within the collection. 
            </summary>
            <remarks>
            <p class="body">The <b>RemoveAt</b> method removes a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> from the Groups collection based on the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Index"/> it is passed.  The following code will remove the first group in the collection.</p>
            <p class="code">UltraListBar1.Groups.RemoveAt(0)</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts the group into the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.ToString">
            <summary>
            Method that returns a null string.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.Add">
            <summary>
            Method that adds a group to the end of the collection.
            </summary>
            <remarks>
            <p class="body">The <b>Add</b> method is an overloaded method. This version of the Add method receives no parameters and will add a group to the end of the collection with the default <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> of "New Group".  The Add method can be passed parameters to allow the developer more control over the Groups collection.</p>
            <p class="code">UltraListBar1.Groups.Add()</p>
            </remarks>
            <returns>The newly added group</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.Add(System.String)">
            <summary>
            Method that adds a group to the end of the collection passing in a string as the key.
            </summary>
            <remarks>
            <p class="body">The <b>Add</b> method is an overloaded method. This Add method of the Groups collection receives a <b>Key</b> passed as a string.  The group will be added to the end of the Groups collection and have the default <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> of "New Group".  You should be careful not to add a group that has the same key as a group that already exists. </p>
            <p class="code">UltraListBar1.Groups.Add(myKey)</p>
            </remarks>
            <param name="key">The key to assign the new group</param>
            <returns>The newly added group</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.Add(System.String,System.String)">
            <summary>
            Method that adds a group to the end of the collection passing in a string variable as the key and another string variable as the text of the new group.
            </summary>
            <remarks>
            <p class="body">The <b>Add</b> method is an overloaded method. This Add method of the Groups collection receives a <b>Key</b> and the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> of the new group both passed as strings.  The text and the key may be assigned the same string. The group will be added to the end of the Groups collection. You should be careful not to add a group that has the same key as a group that already exists.</p>
            <p class="code">UltraListBar1.Groups.Add("myKey", "myText")</p>
            </remarks>
            <param name="key">The key to assign the new group</param>
            <param name="text">The caption text for the new group</param>
            <returns>The newly added group</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.AddGroupHelper(Infragistics.Win.UltraWinListBar.Group)">
            <summary>
            Should not be called outside of collection or streamer classes
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.Insert(System.Int32)">
            <summary>
            Method that inserts a group into the collection at a specific index.
            </summary>
            <remarks>
            <p class="body">The <b>Insert</b> method is an overloaded method. The method inserts a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> at the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Index"/> it is passed.  All groups within the collection residing at the index or later in the collection will have their indexes increased by one.  The index passed in must be an integer.</p>
            <p class="code">UltraListBar1.Groups.Insert(0)</p>
            </remarks>
            <param name="index">Where to insert the new group</param>
            <returns>The newly added group</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.Insert(System.Int32,System.String)">
            <summary>
            Method that inserts a group into the collection at a specific index with a given key.
            </summary>
            <remarks>
            <p class="body">The <b>Insert</b> method is an overloaded method. This method inserts a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> at the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Index"/> it is passed and supplies a <b>Key</b> to the group.  All groups within the collection residing at the index or later in the collection will have their indexes increased by one.  The index passed in must be an integer and the key that is passed must be a string.</p>
            <p class="code">UltraListBar1.Groups.Insert(0, "myKey")</p>
            </remarks>
            <param name="index">Where to insert the new group</param>
            <param name="key">The key to assign the new group</param>
            <returns>The newly added group</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.Insert(System.Int32,System.String,System.String)">
            <summary>
            Method that inserts a group into the collection at a specific index with a given key and text.
            </summary>
            <remarks>
            <p class="body">The <b>Insert</b> method is an overloaded method. This method inserts a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> at the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Index"/> it is passed and supplies a <b>Key</b> and <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> to the group.  All groups within the collection residing at the index or later in the collection will have their indexes increased by one.  The index passed in must be an integer and the key and text that are passed must be strings.</p>
            <p class="code">UltraListBar1.Groups.Insert(0, "myKey", "myText")</p>
            </remarks>
            <param name="index">Where to insert the new group</param>
            <param name="key">The key to assign the new group</param>
            <param name="text">The caption text for the new group</param>
            <returns>The newly added group</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.InsertGroupHelper(System.Int32,Infragistics.Win.UltraWinListBar.Group)">
            <summary>
            Should not be called outside of collection or streamer classes
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.Clear">
            <summary>
            Method that clears all the groups from the collection.
            </summary>
            <remarks>
            <p class="body">The <b>Clear</b> method removes every <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> from the collection.</p>
            <p class="code">UltraListBar1.Groups.Clear()</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.Remove(Infragistics.Win.UltraWinListBar.Group)">
            <summary>
            Method that removes a group from the Groups collection.
            </summary>
            <remarks>
            <p class="body">The <b>Remove</b> method clears a specified <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> from the collection.  The value passed into the method must be a group.</p>
            <p class="code">UltraListBar4.Groups.Remove(myGroup)</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation returns a type safe enumerator.
            </summary>
            <returns>A type safe enumerator</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object
            </summary>
            <param name="propChangeInfo">PropChangeInfo contains information on which subobject changed and which property of the subobject changed.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupsCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
               A collection of <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> objects. The Group object is the container object for every <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> housed at a single level within the UltraListBar.  The Groups collection allows you to manipulate all the groups within the collection at a common parent level.
            </summary>
            <remarks>
            <p class="body">Before adding any items to the UltraListBar, you must first have a Group object. When a group is added and the text of the group has not been specified, the default text is New Group. The following code adds a group to the end of the collection:</p>
            <p class="code">UltraListBar1.Groups.Add()</p>
            <p class="body">You may also add a group and pass it a unique key as well as determine the text of the group.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupsCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Generic indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupsCollection.IsFixedSize">
            <summary>
            Read-only property that returns false if the Groups collection can be sized.
            </summary>
            <remarks>
            <p class="body">The <b>IsFixedSize</b> property reflects whether the Groups collection can be sized.</p>
            <p class="code">If UltraListBar4.Groups.IsFixedSize = False Then UltraListBar4.Groups.Add()</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupsCollection.Item(System.Int32)">
            <summary>
            The indexer of the groups within the collection.  The indexer is an integer.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupsCollection.Item(System.String)">
            <summary>
            String indexer of the groups within the collection.
            </summary>
            <remarks>
            <p class="body">The string serves as the group's unique <b>Key</b> within the collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupsCollection.InitialCapacity">
            <summary>
            Abstract property that returns the initial capacity of the groups's collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupsCollection.Control">
            <summary>
            Read-only property that returns the UltraListBar control that owns the Groups collection.
            </summary>
            <remarks>
            <p class="body">The <b>Control</b> property returns the UltraListBar control that contains the Groups collection.  After retrieving the control, you are free to manipulate the many properties associated with the control.  The following code sample uses the Control property of the Groups collection to change the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Appearance"/> of the control.</p>
            <p class="code">UltraListBar1.Groups.Control.Appearance = myAppearance</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupsCollection.IsReadOnly">
            <summary>
            Read-only property that returns true if this collection is read-only.
            </summary>
            <remarks>
            <p class="body">The <b>IsReadOnly</b> property is used to determine if the groups collection is read-only.  The property will return a Boolean value.</p>
            <p class="code">If UltraListBar4.Groups.IsReadOnly = False Then UltraListBar4.Groups.Insert(0)</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.GroupEnumerator">
            <summary>
            Enumerator for the GroupsCollection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupEnumerator.Current">
            <summary>
            Type-safe version of Current
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.GroupUIElement">
            <summary>
               The GroupUIElement is the graphical interface that is visible to the user that contains both the GroupHeaderUIElement (the Group button) and the GroupItemAreaUIElement (the items section).
            </summary>
            <remarks>
            <p class="body">The group header and the item icons behave as buttons.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinListBar.Group)">
            <summary>
            Constructor for the GroupUIElement.
            </summary>
            <param name="parent">The parent element</param>
            <param name="group">The group</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Does nothing
            </summary>
            <param name="drawParams">The <see cref="T:Infragistics.Win.UIElementDrawParams"/> used to provide rendering information.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Does nothing
            </summary>
            <param name="drawParams">The <see cref="T:Infragistics.Win.UIElementDrawParams"/> used to provide rendering information.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupUIElement.DrawBorders(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Does nothing
            </summary>
            <param name="drawParams">The <see cref="T:Infragistics.Win.UIElementDrawParams"/> used to provide rendering information.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupUIElement.PositionChildElements">
            <summary>
            Positions the child elements for this group.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.GroupUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the GroupUIElement. 
            </summary>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupUIElement.Group">
            <summary>
            Returns the group context of the GroupUIElement.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.GroupUIElement.ClipChildren">
            <summary>
            Returns true to clip the child elements of the GroupUIElement.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.ItemScrollButtonUIElement">
            <summary>
            ItemScrollButton
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemScrollButtonUIElement.#ctor(Infragistics.Win.UIElement,System.Windows.Forms.ScrollButton)">
            <summary>
            Constructor
            </summary>
            <param name="parent">The parent element</param>
            <param name="direction"></param>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.Item">
            <summary>
               The Item object is the individual sub object contained within a group. The Item object behaves like a button and the icon can be pressed. The appearance of the item object can be customized as well. There can be several items per group.  
            </summary>
            <remarks>
            <p class="body">Before adding any items to the UltraListBar control, you must first add a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> object.  You can access all the items within a group through the group's Items Collection. When an item is added to the end of the collection and the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Text"/> has not been specified, the default text is "New ListItem".  The following code adds an item to the end of a group.</p>
            <p class="code">UltraListBar1.Groups(0).Items.Add()</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.#ctor">
            <summary>
            Default constructor for creating a new Item object. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization of an Item object.  The parameters needed are SerializationInfo and StreamingContext.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>		
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialize the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.OnDispose">
            <summary>
            Called when the item is disposed.
            </summary>
            <remarks>
            <p class="body"><b>OnDispose</b> sets the object to null when the Disposed method has been called.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ToString">
            <summary>
            Read-only property that returns the key of the item as a string.
            </summary>
            <remarks>
            <p class="body">The <b>ToString</b> property returns the <b>Key</b> of the item as a string.  The key of the item is the unique identifier of tht item within the Items Collection.  The ToString property will return an empty string if a key has not been assigned to the item.</p>
            <p class="code">myString = UltraListBar4.Groups(0).Items(0).ToString</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.Rename">
            <summary>
            Displays a textbox control over the group header so that the user can rename the group.
            </summary>
            <remarks>
            <p class="body">The <b>Rename</b> method is used to allow the user to change the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Text"/> associated with an item.  The text of the item is used for display purposes only and shouldn't be confused with the item's <b>Key</b> value.</p>
            <p class="code">UltraListBar1.Groups(0).Items(0).Rename()</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property is changed on a sub object of the item.
            </summary>
            <param name="propChangeInfo">PropChangeInfo contains information on which subobject changed and which property of the subobject changed.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.EnsureVisible">
            <summary>
            Method used to scroll the item into view (if necessary).
            </summary>
            <remarks>
            <p class="body">The <b>EnsureVisible</b> method is used to make an item visible to the user.</p>
            <p class="code">UltraListBar4.Groups(0).Items(0).EnsureVisible()</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ShouldSerializeText">
            <summary>
            Read-only property that returns true if the current text is not the default text.
            </summary>
            <remarks>
            <p class="body">The <b>ShouldSerializeText</b> property gives the developer the ability to determine if the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Text"/> property has been changed from its default value.  If this property returns 'true' then use the ResetText method to restore the default value.  There are several other 'Serialize' properties as well.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ResetText">
            <summary>
            Method that sets the text back to its default value.
            </summary>
            <remarks>
            <p class="body">The <b>ResetText</b> method sets the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Text"/> of the item back to its original default value.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ShouldSerializeSmallImageIndex">
            <summary>
            Read-only property that returns true if the current SmallImageIndex value is not the same as the default value for this property.
            </summary>
            <remarks>
            <p class="body">The <b>ShouldSerializeSmallImageIndex</b> property gives the developer the ability to determine if the <see cref="P:Infragistics.Win.UltraWinListBar.Item.SmallImageIndex"/> property has been changed from its default value.  If this property returns 'true' then use the ResetSmallImageIndex method to restore the default value.  There are several other 'Serialize' properties as well.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ResetSmallImageIndex">
            <summary>
            Method that sets the SmallImageIndex back to its default value.
            </summary>
            <remarks>
            <p class="body">The <b>ResetSmallImageIndex</b> method sets the integer of the <see cref="P:Infragistics.Win.UltraWinListBar.Item.SmallImageIndex"/> property back to its original default value.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ShouldSerializeLargeImageIndex">
            <summary>
            Read-only property that returns true if the current LargeImageIndex value is not the same as the default value for this property.
            </summary>
            <remarks>
            <p class="body">The <b>ShouldSerializeLargeImageIndex</b> property gives the developer the ability to determine if the <see cref="P:Infragistics.Win.UltraWinListBar.Item.LargeImageIndex"/> property has been changed from its default value.  If this property returns true then use the ResetLargeImageIndex method to restore the default value. </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ResetLargeImageIndex">
            <summary>
            Method used to set the LargeImageIndex back to its default value.
            </summary>
            <remarks>
            <p class="body">The <b>ResetLargeImageIndex</b> method sets the integer of the <see cref="P:Infragistics.Win.UltraWinListBar.Item.LargeImageIndex"/> property back to its original default value.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.GetItemAppearanceImage">
            <summary>
            Returns the Item's Appearance.Image.
            If Item.Appearance.Image is not set, returns null
            </summary>
            <returns>System.Drawing.Image</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ShouldSerializeAppearance">
            <summary>
            Read-only property that returns true if the appearance has any non-default property values set.
            </summary>
            <remarks>
            <p class="body">The current property values for <see cref="P:Infragistics.Win.UltraWinListBar.Item.Appearance"/> will be compared to the default values of the Appearance object. If any of the properties have changed then true will be returned by this property.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ResetAppearance">
            <summary>
            Method used to reset all appearance property values to their default values.
            </summary>
            <remarks>
            <p class="body">The <b>ResetAppearance</b> method will revert the properties of the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Appearance"/> to their default values.  This method allows the developer to roll back all changes made to the Appearance object.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ResolveAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Returns the resolved property settings used to render this item.
            </summary>
            <param name="appData">The structure to contain the resolved apperance.</param>
            <param name="requestedProps">Bit flags indictaing which properties to resolve.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Invoked during the serialization of the object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>		
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.OnDeserialization(System.Object)">
            <summary>
            Invoked after the entire object graph has been deserialized.
            </summary>
            <param name="sender">The object that initiated the callback. The functionality for the this parameter is not currently implemented.</param>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Item.Index">
            <summary>
            Read-only property that returns the index of the item within the Items collection.
            </summary>
            <remarks>
            <p class="body">The <b>Index</b> property returns an integer value which reflects the index of the item within the collection.  The index allows you to gain a reference to the item within the collection.  Keep in mind that indexes can change when adding or deleting items.  It is recommended that you assign items a <b>Key</b> value and use the key to access items within the collection. The following code returns the index of the item that has the key value "myKey".</p>
            <p clas="code"> myInt = UltraListBar1.Groups(0).Items("myKey").Index()</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Item.Group">
            <summary>
            Read-only property that returns the group that is associated with the item.
            </summary>
            <remarks>
            <p class="body">The <b>Group</b> property will return a reference to the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> that contains the item.  After obtaining a reference to the group, the group's properties and methods can be manipulated.  This property is particularly useful within the ItemSelected event.  The following code sample determines if the item that has been clicked on was within the first group and displays a message box if that condition is met.</p>
            <p class="code">If e.Item.Group.Index = 0 Then MsgBox("Clicked Within Group Zero!")</p>
            <p class="note">This code must be placed within the ItemSelected event or another event where the 'e As Infragistics.Win.UltraWinListBar.ItemEventArgs' has been passed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Item.IsVisible">
            <summary>
            Read-only property that returns true if the item is currently scrolled into view.
            </summary>
            <remarks>
            <p class="body">The <b>IsVisible</b> property is used to determine if the item is visible.</p>
            <p class="code">If UltraListBar1.Groups(0).Items(0).IsVisible Then UltraListBar1.Groups(0).Items(0).Text = "Visible!"</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Item.Text">
            <summary>
            Property that gets/sets the text of the item.
            </summary>
            <remarks>
            <p class="body">The <b>Text</b> property is used to set the text associated with an item.  The property also returns the text of an item.  The value must be a string variable.</p>
            <p class="code">UltraListBar4.Groups(0).Items(0).Text = "Item Text"</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Item.SmallImageIndex">
            <summary>
            Property that gets/sets the index used for the small images.  The index must be an integer.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Item.LargeImageIndex">
            <summary>
            Property that gets/sets the index used for the large images.  The index must be an integer.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Item.Appearance">
            <summary>
            Property that gets/sets the Appearance object assigned to this item.
            </summary>
            <remarks>
            <p class="body">The <b>Appearance</b> property of the item will return a reference to the Appearance object that has been assigned to this item.  Once you have retrieved the Appearance object, you will be able to modify its formatting properties.  You are also able to assign a previously created Appearance object to the item.</p>
            <p class="code">UltraListBar1.Groups(0).Items("myItem").Appearance = myAppearance</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Item.HasAppearance">
            <summary>
            Read-only property that returns true if an Appearance object has been created and assigned to the item.
            </summary>
            <remarks>
            <p class="body">The <b>HasAppearance</b> property allows you to determine if the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Appearance"/> property has been set for the item.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.Item.ListItemTypeConverter">
            <summary>
            TypeConverter for an UltraWinListBar ListItem.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ListItemTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Indicates which types the class can be cast to.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>A boolean indicating if the class can be converted to the specified type.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Item.ListItemTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the specified type.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">Object to convert.</param>
            <param name="destinationType">Type to which the object is to be converted.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.ItemImageUIElement">
            <summary>
              The ItemImageUIElement is the graphical area that represents the items' icons. 
            </summary>
            <remarks>
            <p class="body">The <b>ItemImageUIElement</b> represents the visible graphic portion of an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> and functions as a button.  The image will be automatically scaled to look perfect whether you use small or large icons in your UltraListBar.  The background of the image can also be drawn in a flat style to emulate the look and feel of the XP operating system.  The borders of the image can also be changed to suit your preference.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemImageUIElement.#ctor(Infragistics.Win.UIElement,System.Drawing.Image)">
            <summary>
            Constructor used to create the ItemImageUIElement.  The parameters needed are the UIElement and an image.
            </summary>
            <param name="parent">The parent element</param>
            <param name="image">The image</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemImageUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Allows the background of the item's image to emulate the XP flat style look.
            </summary>
            <remarks>
            <p class="body">The <b>DrawBackColor</b> method will draw the backcolor of the <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> in a manner consistent with the look and feel of Microsoft's XP operating system.  This will be determined by the <see cref="T:Infragistics.Win.UltraWinListBar.Style"/> property of the UltraListBar control being set to Flat.</p>
            </remarks>
            <param name="drawParams">The <see cref="T:Infragistics.Win.UIElementDrawParams"/> used to provide rendering information.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemImageUIElement.PositionChildElements">
            <summary>
            Does nothing. No child elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemImageUIElement.AdjustImageDisplayRect(System.Drawing.Rectangle@)">
            <summary>
            Adjusts the image's rectangle during the drawing of the ItemImageUIElement.
            </summary>
            <remarks>
            <p class="body"><b>AdjustImageDisplayRect</b> may be needed when the image resides on a button that is pressed. In this case, the image may be offset 1 pixel right and down.</p>
            </remarks>
            <param name="displayRect">The display rect to adjust.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemImageUIElement.DrawBorders(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Draws the borders for the item image.
            </summary>
            <param name="drawParams">The <see cref="T:Infragistics.Win.UIElementDrawParams"/> used to provide rendering information.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemImageUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the Appearance for the ItemImageUIElement.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemImageUIElement.Item">
            <summary>
            Read-only property that returns the associated item of the ItemImageUIElement.
            </summary>
            <remarks>
            <p class="body">The Item property of the ItemImageUIElement will return the <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> associated with the image.  You can then fully manipulate the appearance of the item and access any of its properties or methods as needed.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.ItemsCollection">
            <summary>
               A collection of Item objects.
            </summary>
            <remarks>
            <p class="body">The <b>Items Collection</b> contains every <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> housed within a certain <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> level.  You can add and remove items at the collection level.  Also, you can gain access to the individual items and their properties through the corresponding collection.  The following code shows two different ways to retrieve the <b>Key</b> for the item housed at the first position within the Items collection. </p>
            <p class="code">MsgBox(UltraListBar1.Groups(0).Items.Item(0).Key)</p>
            <p class="code">MsgBox(UltraListBar1.Groups(0).Items(0).Key)</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for de-serialization of the Items Collection.  Parameters used are SerializationInfo and StreamingContext.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> used to obtain the serialized properties of the object</param>
            <param name="context">Context for the deserialization</param>		
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialize the collection
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.Add(System.Object)">
            <summary>
            Overloaded method used to add an item to the Items collection.
            </summary>
            <remarks>
            <p class="body">The <b>Add</b> method will add an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> to the collection.  You have four options on how you would like to add this item.  You can pass a specific item you would like to add to the collection or simply add a new item to the collection without passing any arguments.  This method will add a specific existing item to the end of the collection.</p>
            <p class="code">UltraListBar1.Groups(0).Items.Add(myItem)</p>
            <p class="note">The parameter passed must be dimmed as an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/></p>
            </remarks>
            <param name="value">Must be an Item</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="value">Must be a Item</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.RemoveAt(System.Int32)">
            <summary>
            Method used to remove the item at a specific index from the collection.
            </summary>
            <remarks>
            <p class="body">The <b>RemoveAt</b> method must be passed an integer.  The item at the specified <see cref="P:Infragistics.Win.UltraWinListBar.Item.Index"/> will be removed from the collection.  The following code will remove the item that resides at the first position within the collection.</p>
            <p class="code">UltraListBar1.Groups(0).Items.RemoveAt(0)</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts the item into the collection at a specific index.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.ToString">
            <summary>
            Returns a null string.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.Add">
            <summary>
            Overloaded method used to add an item to the end of the Items collection.
            </summary>
            <remarks>
            <p class="body">The <b>Add</b> method will add an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> to the Items collection.  You have four options on how you would like to add this item.  You can pass a specific item you would like to add to the collection or simply add a new item to the collection without passing any arguments.  This method will add an item and assign it the default values for the <b>Key</b> and the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Text"/> properties.</p>
            </remarks>
            <returns>The newly added item</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.Add(System.String)">
            <summary>
            Overloaded method used to add an item to the end of the Items collection.
            </summary>
            <remarks>
            <p class="body">The <b>Add</b> method will add an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> to the Items collection.  You have four options on how you would like to add this item.  You can pass a specific item to add to the collection or simply add a new item to the collection without passing any arguments.  This method will add an item and assign it the specific <b>Key</b> passed to the method.  The key must be a string and it must be unique.</p>
            <p class="code">UltraListBar4.Groups(0).Items.Add("myKey")</p>
            </remarks>
            <param name="key">The key to assign the new item</param>
            <returns>The newly added item</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.Add(System.String,System.String)">
            <summary>
            Overloaded method used to add an item to the end of the Items collection.
            </summary>
            <remarks>
            <p class="body">The <b>Add</b> method will add an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> to the Items collection.  You have four options on how you would like to add this item.  This code will add an item to the collection with the specified <b>Key</b> and <see cref="P:Infragistics.Win.UltraWinListBar.Item.Text"/>.  The key and the text must be string variables.</p>
            <p class="code">UltraListBar1.Groups(0).Items.Add(myKey, myText)</p>
            </remarks>
            <param name="key">The key to assign the new item</param>
            <param name="text">The text for the new item</param>
            <returns>The newly added item</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.Insert(System.Int32)">
            <summary>
            Overloaded method used to insert an item into the Items collection at the specified index.
            </summary>
            <remarks>
            <p class="body">The <b>Insert</b> method will add an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> to the Items collection and assign it a specific position within the collection.  The parameter passed must be an integer and since the collection is zero-based the index cannot exceed one less than the number of items within the collection (Count - 1).  There are three different options on how you would like to insert an item.  This method will insert an item at a specific position within the collection and assign it the default values for the <b>Key</b> and <see cref="P:Infragistics.Win.UltraWinListBar.Item.Text"/> properties.</p>
            <p class="code">UltraListBar1.Groups(0).Items.Insert(3)</p>
            </remarks>
            <param name="index">Where to insert the new item</param>
            <returns>The newly added item</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.Insert(System.Int32,System.String)">
            <summary>
            Overloaded method used to insert an item into the Items collection at the specified index with a predetermined key value.
            </summary>
            <remarks>
            <p class="body">The <b>Insert</b> method will add an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> to the Items collection and assign it a specific position within the collection.  The parameter passed must be an integer and not exceed one less than the number of items within the collection (zero-based).  There are three different options on how you would like to insert an item.  This method will insert an item at a specific position within the collection and assign it the predetermined value for the <b>Key</b> and the default <see cref="P:Infragistics.Win.UltraWinListBar.Item.Text"/> value.</p>
            <p class="code">UltraListBar1.Groups(0).Items.Insert(3, "myKey")</p>
            </remarks>
            <param name="index">Where to insert the new item</param>
            <param name="key">The key to assign the new item</param>
            <returns>The newly added item</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.Insert(System.Int32,System.String,System.String)">
            <summary>
            Overloaded method used to insert an item into the Items collection at the specified index with a predetermined key and text values.
            </summary>
            <remarks>
            <p class="body">The <b>Insert</b> method will add an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> to the Items collection and assign it a specific position within the collection.  The parameter passed must be an integer and not exceed one less than the number of items within the collection (zero-based).  There are three different options on how you would like to insert an item.  This method will insert an item at a specific position within the collection and assign it the predetermined values for the <b>Key</b> and <see cref="P:Infragistics.Win.UltraWinListBar.Item.Text"/> properties.  The key and text values must be strings.</p>
            <p class="code">UltraListBar1.Groups(0).Items.Insert(3, "myKey", "myText")</p>
            </remarks>
            <param name="index">Where to insert the new item</param>
            <param name="key">The key to assign the new item</param>
            <param name="text">The text for the new item</param>
            <returns>The newly added item</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.Clear">
            <summary>
            Method used to clear the Items collection of all items.
            </summary>
            <remarks>
            <p class="body">The <b>Clear</b> method will empty the Items collection of every <see cref="T:Infragistics.Win.UltraWinListBar.Item"/>.</p>
            <p class="code">UltraListBar1.Groups(0).Items.Clear()</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.Remove(Infragistics.Win.UltraWinListBar.Item)">
            <summary>
            Method used to remove a specific item from the Items collection.
            </summary>
            <remarks>
            <p class="body">The <b>Remove</b> method will extract a specified <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> from the Items collection.  The method must be passed an Item parameter.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.GetEnumerator">
            <summary>
            IEnumerable Interface Implementation that returns a type safe enumerator.
            </summary>
            <returns>A type safe enumerator</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property on a sub object has been changed.
            </summary>
            <param name="propChangeInfo">PropChangeInfo contains information on which subobject changed and which property of the subobject changed.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemsCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
               A collection of Item objects.
            </summary>
            <remarks>
            <p class="body">The <b>Items Collection</b> contains every <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> housed within a certain <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> level.  You can add and remove items at the collection level.  Also, you can gain access to the individual items and their properties through the corresponding collection.  The following code shows two different ways to retrieve the <b>Key</b> for the item housed at the first position within the Items collection. </p>
            <p class="code">MsgBox(UltraListBar1.Groups(0).Items.Item(0).Key)</p>
            <p class="code">MsgBox(UltraListBar1.Groups(0).Items(0).Key)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemsCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Generic indexer
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemsCollection.IsFixedSize">
            <summary>
            Read-only property that returns false if the collection can be increased or decreased in size.
            </summary>
            <remarks>
            <p class="body">The <b>ISFixedSize</b> property will return true if you are not able to add or remove an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> from the collection.</p>
            <p class="code"> MsgBox(UltraListBar1.Groups(0).Items.IsFixedSize)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemsCollection.Item(System.Int32)">
            <summary>
            Integer indexer.
            </summary>
            <remarks>
            <p class="body">The Integer indexer reflects the position of the <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> within the collection.  The <see cref="P:Infragistics.Win.UltraWinListBar.Item.Index"/> is zero-based.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemsCollection.Item(System.String)">
            <summary>
            String indexer.
            </summary>
            <remarks>
            <p class="body">The String indexer references the items by their key value.  The <b>Key</b> value must be a string and it must be unique.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemsCollection.InitialCapacity">
            <summary>
            Abstract property that specifies the initial capacity of the Items collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemsCollection.IsReadOnly">
            <summary>
            Read-only property that returns true if the Items collection is read-only.
            </summary>
            <remarks>
            <p class="body">The <b>IsReadOnly</b> property allows you to determine if the collection is read-only.</p>
            <p class="code">MsgBox(UltraListBar4.Groups(0).Items.IsReadOnly())</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.ItemEnumerator">
            <summary>
            Enumerator for the ItemsCollection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemEnumerator.Current">
            <summary>
            Type-safe version of Current.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.ItemTextUIElement">
            <summary>
             Class that encapsulates the graphical interface that houses the text of an item.
            </summary>
            <remarks>
            <p class="body">This UIElement is the sub object of the <see cref="T:Infragistics.Win.UltraWinListBar.ItemUIElement"/> that houses the text area of an element.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemTextUIElement.#ctor(Infragistics.Win.UIElement,System.String)">
            <summary>
            Default constructor that creates a new ItemTextUIElement.  Parameters needed are UIElement and a text string. 
            </summary>
            <param name="parent">The parent element</param>
            <param name="text">The text</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemTextUIElement.PositionChildElements">
            <summary>
            Does nothing. No child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemTextUIElement.WrapText">
            <summary>
            Returns true to indicate that the text should be wrapped to the next line.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.ItemUIElement">
            <summary>
            The ItemUIElement class encapsulates the graphical interface of an item and its behavior as a button.
            </summary>
            <remarks>
            <p class="body">The <b>ItemUIElement</b> class is composed of two UIElements: the <see cref="T:Infragistics.Win.UltraWinListBar.ItemTextUIElement"/> and the <see cref="T:Infragistics.Win.UltraWinListBar.ItemImageUIElement"/>.  These UIElements deal with the appearance of the item and the ItemImageUIElement also functions as a button for selecting the <see cref="T:Infragistics.Win.UltraWinListBar.Item"/>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemUIElement.#ctor(Infragistics.Win.UIElement,Infragistics.Win.UltraWinListBar.Item)">
            <summary>
            Constructor for the ItemUIElement class.  The constructor will create the child UIElements when passed a parent UIElement and an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/>.
            </summary>
            <param name="parent">The parent element</param>
            <param name="item">The item</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Method that initializes the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Appearance"/> for an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/>.
            </summary>
            <param name="appearance">The appearance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemUIElement.PositionChildElements">
            <summary>
            Positions the child elements within the ItemUIElement.
            </summary>
            <remarks>
            <p class="body">The child elements for the ItemUIElement are the <see cref="T:Infragistics.Win.UltraWinListBar.ItemImageUIElement"/> and the <see cref="T:Infragistics.Win.UltraWinListBar.ItemTextUIElement"/></p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Does nothing. No background is drawn
            </summary>
            <param name="drawParams">The <see cref="T:Infragistics.Win.UIElementDrawParams"/> used to provide rendering information.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Does nothing
            </summary>
            <param name="drawParams">The <see cref="T:Infragistics.Win.UIElementDrawParams"/> used to provide rendering information.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemUIElement.GetSizeAndPosition(System.Boolean,System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Gets the size and postion of this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemUIElement.AdjustSizeAndPosition(System.Boolean,System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Adjusts the size and postion of this element
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemUIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs,System.Boolean,Infragistics.Win.UIElement@)">
            <summary>
            Called when the mouse down message is received over the ItemUIElement. 
            </summary>
            <remarks>
            <p class="body">If the mouse is left clicked over the adjustable area of the ItemUIElement, true will be returned.  The mouse messages will be forwarded to the UIElement that it has been passed by reference.</p>
            </remarks>
            <param name="e">Mouse event arguments</param>
            <param name="adjustableArea">True if left clicked over adjustable area of element.</param>
            <param name="captureMouseForElement">If not null on return will capture the mouse and forward all mouse messages to this element.</param>
            <returns>If true then bypass default processing</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemUIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is released over an element
            </summary>
            <param name="e">Mouse event arguments</param>
            <returns>Returning true will ignore the next click event.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.ItemUIElement.Contains(System.Drawing.Point)">
            <summary>
            Returns true if the point is over the ItemUIElement. 
            </summary>
            <param name="point">In client coordinates</param>
            <returns>Returns true if the point is over the element.</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemUIElement.Item">
            <summary>
            Read-only property that returns the associated item.
            </summary>
            <remarks>
            <p class="body">The <b>Item</b> property gives you access to the <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> associated with the ItemUIElement.  This would allow you access to the properties of that item and greater flexibility in controlling the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Appearance"/> of the item.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemUIElement.ClipChildren">
            <summary>
            Returns true to clip the child elements.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemUIElement.Cursor">
            <summary>
            Returns the cursor related to the AppearanceData for the ItemUIElement.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemUIElement.ButtonStyle">
            <summary>
            Gets the button style for the element.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.ItemUIElement.IsButtonStyleMouseActive">
            <summary>
            Indicates if the button style requires invalidation of the element on the MouseEnter and MouseExit  Returns 'true'.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.PropertyIds">
            <summary>
               Values that uniquely identify each control property. 
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.Orientation">
            <summary>
            The <see cref="T:Infragistics.Win.UltraWinListBar.Orientation"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.Groups">
            <summary>
            The <see cref="T:Infragistics.Win.UltraWinListBar.GroupsCollection"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.Group">
            <summary>
            The <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.Items">
            <summary>
            The <see cref="T:Infragistics.Win.UltraWinListBar.ItemsCollection"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.Item">
            <summary>
            The <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.Selected">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.Group.Selected"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.Style">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.Group.Selected"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.Appearance">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.Group.Selected"/> property.
            <seealso cref="P:Infragistics.Win.UltraWinListBar.Item.Appearance"/>
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.ItemAppearance">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.Group.ItemAppearance"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.Text">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.Group.Text"/> property.
            <seealso cref="P:Infragistics.Win.UltraWinListBar.Item.Text"/>
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.LargeImageIndex">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.Item.LargeImageIndex"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.SmallImageIndex">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.Item.LargeImageIndex"/> property.
            <seealso cref="F:Infragistics.Win.UltraWinListBar.PropertyIds.SmallImageIndex"/>
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.HeaderAppearance">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.Group.HeaderAppearance"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.Appearances">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Appearances"/> collection.
            <seealso cref="P:Infragistics.Win.UltraWinListBar.Item.Appearance"/>
            <seealso cref="P:Infragistics.Win.UltraWinListBar.Group.Appearance"/>
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.BorderStyle">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.BorderStyle"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.DefaultIcon">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.DefaultIcon"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.DefaultStyle">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.DefaultStyle"/> used when groups are added.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.SmallImageList">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.SmallImageList"/> is used when the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Style"/> property is set to use small icons.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.LargeImageList">
            <summary>
            The <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.LargeImageList"/> is used when the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Style"/> property is set to use large icons.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.GroupButtonStyle">
            <summary>
            The button style used to display the <see cref="P:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement.ButtonStyle"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.ItemButtonStyle">
            <summary>
            The state of the <see cref="P:Infragistics.Win.UltraWinListBar.ItemUIElement.ButtonStyle"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.ShowContextMenus">
            <summary>
            <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.ShowContextMenus"/> determines if default context menus are shown.
            </summary>
        </member>
        <member name="F:Infragistics.Win.UltraWinListBar.PropertyIds.GroupHeadersVisible">
            <summary>
            Determines whether or not group headers are shown.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.Resources">
            <summary>
            Exposes a <see cref="T:Infragistics.Shared.ResourceCustomizer"/> instance for this assembly. 
            </summary>
            <seealso cref="P:Infragistics.Win.UltraWinListBar.Resources.Customizer"/> 
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Resources.GetString(System.String,System.Object[])">
            <summary>
            Returns the resource string using the specified name and default culture.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Resources.GetString(System.String)">
            <summary>
            Returns the resource string using the specified resource name and default culture. The string is then formatted using the arguments specified.
            </summary>
            <param name="name">Name of the string resource to return.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.Resources.GetObject(System.String)">
            <summary>
            Returns the resource object using the specified name.
            </summary>
            <param name="name">Name of the resource item</param>
            <returns>An object containing the specified resource</returns>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.Resources.Customizer">
            <summary>
            Returns the <see cref="T:Infragistics.Shared.ResourceCustomizer"/> for this assembly.
            </summary>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.UltraListBar">
            <summary>
            Infragistics' UltraListBar control
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.#ctor">
            <summary>
            Default constructor for the UltraListBar class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.InitializeComponent">
            <summary>
               Required method for Designer support - do not modify 
               the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.Dispose(System.Boolean)">
            <summary>
            Exits edit mode and cleans up any resources being used.
            </summary>
            <remarks>
            <p class="body">Passed a boolean value called 'disposing' to determine if the resources should be cleaned up.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.OnPropertyChanged(Infragistics.Win.PropertyChangedEventArgs)">
            <summary>
            Called when a property or sub object's property value has changed.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.OnSubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            Called when a property has changed on a sub object.
            </summary>
            <remarks>
            <p class="body"><b>OnPropertyChanged</b> will also be called.</p>
            </remarks>
            <param name="propChangeInfo">PropChangeInfo contains information on which subobject changed and which property of the subobject changed.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeGroups">
            <summary>
            Read-only property that determines if the collection needs to be serialized.  
            </summary>
            <remarks>
            <p class="body">The <b>ShouldSerializeGroups</b> property returns true if the number of groups is greater than one or if there is one <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> that needs to be serialized.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeGroupsStreamer">
            <summary>
            Always returns false.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetGroups">
            <summary>
            Method used to clear the Groups collection of all groups.
            </summary>
            <remarks>
            <p class="body">The <b>ResetGroups</b> method will rid the collection of every <see cref="T:Infragistics.Win.UltraWinListBar.Group"/>.  You can use the <b>Clear</b> method to clear all the groups from the collection as well.</p>
            <p class="code">UltraListBar1.Groups.Clear()</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeAppearances">
            <summary>
            Determines if the Appearance collection needs to be serialized.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetAppearances">
            <summary>
            Method used to clear the Appearances collection.
            </summary>
            <remarks>
            <p class="body">The <b>ResetAppearances</b> method rids the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Appearances"/> collection of all appearances.  The <b>Clear</b> method can also be used to clear the Appearances collection.</p>
            <p class="code">UltraListBar4.Appearances.Clear()</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.OnCreateControl">
            <summary>
            Called when the control is first created.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeOrientation">
            <summary>
            Read-only property that returns true if the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Orientation"/> property is not set to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeGroupHeadersVisible">
            <summary>
            Read-only property that returns true if the GroupHeadersVisible property is not set to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetOrientation">
            <summary>
            Resets the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Orientation"/> property back to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetGroupHeadersVisible">
            <summary>
            Resets the GroupHeadersVisible property back to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeShowContextMenus">
            <summary>
            Returns true if the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.ShowContextMenus"/> property is not set to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetShowContextMenus">
            <summary>
            Resets the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.ShowContextMenus"/> property back to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.OnResize(System.EventArgs)">
            <summary>
            Called when the control is resized.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.OnGroupSelected(Infragistics.Win.UltraWinListBar.GroupEventArgs)">
            <summary>
            Called when a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> is <see cref="P:Infragistics.Win.UltraWinListBar.Group.Selected"/>.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.OnItemSelected(Infragistics.Win.UltraWinListBar.ItemEventArgs)">
            <summary>
            Called when an <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> is selected.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.OnAfterDefaultContextMenuClicked(Infragistics.Win.UltraWinListBar.AfterDefaultContextMenuClickArgs)">
            <summary>
            Called after a default context menu item was clicked.
            </summary>
            <remarks>The default implementation raises the <see cref="E:Infragistics.Win.UltraWinListBar.UltraListBar.AfterDefaultContextMenuClicked"/> event,</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.OnBeforeDefaultContextMenuClicked(Infragistics.Win.UltraWinListBar.BeforeDefaultContextMenuClickArgs)">
            <summary>
            Called before a default context menu item was clicked.
            </summary>
            <remarks>The default implementation raises the <see cref="E:Infragistics.Win.UltraWinListBar.UltraListBar.BeforeDefaultContextMenuClicked"/> event,</remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeSmallImageList">
            <summary>
            Read-only property that returns true if the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.SmallImageList"/> property is not null.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetSmallImageList">
            <summary>
            Method that sets the SmallImageList property to null.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeLargeImageList">
            <summary>
            Read-only property that returns true if the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.LargeImageList"/> property is not null.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetLargeImageList">
            <summary>
            Method used to set the LargeImageList property to null.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeItemAppearance">
            <summary>
            Read-only property that returns true if the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.ItemAppearance"/> has any non-default property values set.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetItemAppearance">
            <summary>
            Method used to reset all <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.ItemAppearance"/> property values to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeHeaderAppearance">
            <summary>
            Read-only property that returns true if the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.HeaderAppearance"/> has any non-default property values set.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetHeaderAppearance">
            <summary>
            Method used to reset all the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.HeaderAppearance"/> property values to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeAppearance">
            <summary>
            Read-only property that returns true if the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Appearance"/> has any non-default property values set.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetAppearance">
            <summary>
            Method used to reset all <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Appearance"/> property values to their default values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ExitEditMode">
            <summary>
            Exits edit mode and applies any changes to the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Text"/>.  Edit mode was entered by calling the <see cref="M:Infragistics.Win.UltraWinListBar.Group.Rename"/> method of a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> or <see cref="T:Infragistics.Win.UltraWinListBar.Item"/>. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ExitEditMode(System.Boolean)">
            <summary>
            Exits edit mode and applies any changes to the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Text"/>.  Edit mode was entered by calling the <see cref="M:Infragistics.Win.UltraWinListBar.Group.Rename"/> method of a <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> or <see cref="T:Infragistics.Win.UltraWinListBar.Item"/>. 
            </summary>
            <param name="cancelChanges">True if changes are to be discarded, false otherwise</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ShouldSerializeBorderStyle">
            <summary>
            Read-only property that returns true if the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.BorderStyle"/> property is not set to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.ResetBorderStyle">
            <summary>
            Method used to reset the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.BorderStyle"/> property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.InitializeMemberVariables">
            <summary>
            //	BF 7.3.01
            Initialize private member variables here. 
            Most useful for our object properties; Some of the System classes
            don't have overloads that enable the setting of certain properties 
            when the object is contructed, so we'll do that here
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBar.IsPointDesignTimeActive(System.Drawing.Point)">
            <summary>
            Indicates if the point should be handled by the control at design time.
            </summary>
            <param name="pt">Point in client coordinates.</param>
            <returns>True if notifications about the specified point should be handled by the control.</returns>
        </member>
        <member name="E:Infragistics.Win.UltraWinListBar.UltraListBar.GroupSelected">
            <summary>
            Event that is fired when a group is selected.
            </summary>
            <remarks>
            <p class="body">The <b>GroupSelected</b> event returns a reference to the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> that has been <see cref="P:Infragistics.Win.UltraWinListBar.Group.Selected"/>.  You can retreive the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Index"/> of the selected group to enable you to perform multiple tasks.  The following code will set an integer variable to the selected group's index.</p>
            <p class="code">Dim selectedGroup As Integer</p>
            <p class="code">selectedGroup = e.Group.Index</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinListBar.UltraListBar.KeyPress">
            <summary>
            Event that is fired when a key is pressed and released.
            </summary>
            <remarks>
            <p class="body">The <b>KeyPress</b> event returns a reference (the KeyChar) of the key that has been pressed.  The KeyPress will fire after the <b>KeyUp</b> event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinListBar.UltraListBar.KeyDown">
            <summary>
            Event that is fired when a key is pressed.
            </summary>
            <remarks>
            <p class="body">The <b>KeyDown</b> event returns a reference (the KeyChar) of the key that has been pressed.  This event is fired before the <b>KeyUp</b> and <b>KeyPress</b> events.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinListBar.UltraListBar.KeyUp">
            <summary>
            Event that is fired when a key is released.
            </summary>
            <remarks>
            <p class="body">The <b>KeyUp</b> event returns a reference (the KeyChar) of the key that has been pressed.  This event is fired before the <b>KeyPress</b> event and after the <b>KeyDown</b> event.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinListBar.UltraListBar.ItemSelected">
            <summary>
            Event that fires when an item is selected.
            </summary>
            <remarks>
            <p class="body">The <b>ItemSelected</b> event returns a reference to the <see cref="T:Infragistics.Win.UltraWinListBar.Item"/> that has been selected.  You can retreive the <see cref="P:Infragistics.Win.UltraWinListBar.Item.Index"/> of the selected item to enable you to perform several different tasks.  The following code will set a variable to the selected item's index.</p>
            <p class="note">When more than one group is contained within the control, it is necessary to check the index of the group as well before performing any processing.</p>
            <p class="code">Dim selectedItem As Integer</p>
            <p class="code">selectedItem = e.Item.Index</p>
            <p class="code">If e.Item.Group.Index = 0 Then ' checks to be sure that this occurs only when the first group's first item is clicked</p>
            <p class="code">UltraListBar1.Groups(0).Text = "Item Selected!"</p>
            <p class="code">End If</p>
            </remarks>
        </member>
        <member name="E:Infragistics.Win.UltraWinListBar.UltraListBar.BeforeDefaultContextMenuClicked">
            <summary>
            Event that fires before item is selected on default context menu.
            </summary>
        </member>
        <member name="E:Infragistics.Win.UltraWinListBar.UltraListBar.AfterDefaultContextMenuClicked">
            <summary>
            Event that fires after item is selected on default context menu.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.SubObjectPropChangeHandler">
            <summary>
            Returns the event handler that is notified when a property on a sub object has changed.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.Infragistics#Win#IImageListProvider#ImageList">
            <summary>
            Returns the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.SmallImageList"/> if it has images. Otherwise, it returns <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.LargeImageList"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.ControlUIElement">
            <summary>
            Read-only property that returns the main UIElement of the UltraListBar control.
            </summary>
            <remarks>
            <p class="body">Returns the <b>ControlUIElement</b> that contains all the visible graphics of the control.  Other UIElements that are contained by the main element include: <see cref="T:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement"/>, <see cref="T:Infragistics.Win.UltraWinListBar.GroupItemAreaUIElement"/>, <see cref="T:Infragistics.Win.UltraWinListBar.GroupUIElement"/>, <see cref="T:Infragistics.Win.UltraWinListBar.ItemImageUIElement"/>, <see cref="T:Infragistics.Win.UltraWinListBar.ItemTextUIElement"/>, <see cref="T:Infragistics.Win.UltraWinListBar.ItemUIElement"/> and <see cref="T:Infragistics.Win.UltraWinListBar.UltraListBarUIElement"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.UIElement">
            <summary>
            Read-only property that returns the main UIElement of the UltraListBar.
            </summary>
            <remarks>
            <p class="body">Returns the UIElement that contains all the visible graphics of the control.  Other UIElements that are contained by the main element include: <see cref="T:Infragistics.Win.UltraWinListBar.GroupHeaderUIElement"/>, <see cref="T:Infragistics.Win.UltraWinListBar.GroupItemAreaUIElement"/>, <see cref="T:Infragistics.Win.UltraWinListBar.GroupUIElement"/>, <see cref="T:Infragistics.Win.UltraWinListBar.ItemImageUIElement"/>, <see cref="T:Infragistics.Win.UltraWinListBar.ItemTextUIElement"/>, <see cref="T:Infragistics.Win.UltraWinListBar.ItemUIElement"/> and <see cref="T:Infragistics.Win.UltraWinListBar.UltraListBarUIElement"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.Text">
            <summary>
               <para>
                  Control Text - not used
               </para>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.TabStop">
            <summary>
               <para>
                  Control Tabstop - not used
               </para>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.TabIndex">
            <summary>
               <para>
                  Control Tabindex - not used
               </para>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.BackColor">
            <summary>
               <para>
                  BackColor property - not supported
               </para>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.ForeColor">
            <summary>
               <para>
                  ForeColor property - not supported
               </para>
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.Groups">
            <summary>
            Property that gets/sets the Groups collection assigned to the UltraListBar.
            </summary>
            <remarks>
            <p class="body">The <b>Groups</b> property gets/sets the Groups collection that is associated with the control.  Obtaining a reference to the Groups collection enables you to access each <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> within the collection as well.  When setting this property, be sure to set it to a variable defined as Infragistics.Win.UltraWinListBar.GroupsCollection.  The following code will create a Groups collection and add a group to the collection.</p>
            <p class="code">Dim myGroupCollection As Infragistics.Win.UltraWinListBar.GroupsCollection</p>
            <p class="code">Dim myGroup As Infragistics.Win.UltraWinListBar.Group</p>
            <p class="code">myGroupCollection.Add(myGroup)</p>
            <p class="code">UltraListBar1.Groups = myGroupCollection</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.GroupsStreamer">
            <summary>
            Used to serialize the groups collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.Appearances">
            <summary>
            Read-only property that returns the Appearances collection.
            </summary>
            <remarks>
            <p class="body">The <b>Appearances</b> property allows you to determine the Appearance objects that have been assigned to different graphical elements within the application.  You can add and remove appearances to the collection as well as manipulate individual properties of each <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Appearance"/>.</p>
            <p class="code">Dim myAppearances As Infragistics.Win.AppearancesCollection</p>
            <p class="code">myAppearances = UltraListBar4.Appearances()</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.SelectedGroup">
            <summary>
            Read-only property that returns the currently selected Group object.
            </summary>
            <remarks>
            <p class="body">The <b>SelectedGroup</b> property returns the <see cref="T:Infragistics.Win.UltraWinListBar.Group"/> that is the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Selected"/> group.  If there is currently no group that is selected, the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Index"/> property will return a -1.  The following code will return the index of the selected group.</p>
            <p class="code">MsgBox(UltraListBar4.SelectedGroup.Index)</p>
            <p class="body">This code will return the text of the selected group.</p>
            <p class="code">MsgBox(UltraListBar4.SelectedGroup.Text)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.Orientation">
            <summary>
            Property that gets/sets the orientation of the control.
            </summary>
            <remarks>
            <p class="body">The <b>Orientation</b>  property determines whether the UltraListBar control is positioned horizontally or vertically.</p>
            <p class="code">UltraListBar1.Orientation = Infragistics.Win.UltraWinListBar.Orientation.Vertical</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.GroupHeadersVisible">
            <summary>
            Property that gets/sets whether the control shows group headers.
            </summary>
            <remarks>
            <p class="body">The <b>GroupHeadersVisible</b>  property determines whether the Group headers are visible.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.ShowContextMenus">
            <summary>
            Property that gets/sets whether the context menu will automatically be shown at runtime when the user right clicks on the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.SmallImageList">
            <summary>
            Property that gets/sets the imagelist used to supply images when the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Style"/> is set to SmallIcons.
            </summary>
            <remarks>
            <p class="body">The <b>SmallImageList</b> property must be set to a variable dimmed as an ImageList.</p>
            <p class="code">Dim myImageList As ImageList</p>
            <p class="code">UltraListBar1.SmallImageList = myImageList</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.LargeImageList">
            <summary>
            Property that gets/sets the imagelist used to supply images for when the <see cref="P:Infragistics.Win.UltraWinListBar.Group.Style"/> property is set to LargeIcons.
            </summary>
            <remarks>
            <p class="body">The <b>LargeImageList</b> property must be set to a variable dimmed as an ImageList.</p>
            <p class="code">Dim myImageList As ImageList</p>
            <p class="code">UltraListBar1.LargeImageList = myImageList</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.ItemAppearance">
            <summary>
            Property that gets/sets the default appearance for items within the entire control.
            </summary>
            <remarks>
            <p class="body">The <b>ItemAppearance</b> property must be set to a variable dimmed as an Appearance object.  The property will also return an Appearance type.</p>
            <p class="code">Dim myAppearance As Infragistics.Win.Appearance</p>
            <p class="code">UltraListBar1.ItemAppearance = myAppearance</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.HasItemAppearance">
            <summary>
            Read-only property that returns true if an <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.ItemAppearance"/> object has been created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.HeaderAppearance">
            <summary>
            Property that gets/sets the default appearance for group headers.
            </summary>
            <remarks>
            <p class="body">The <b>HeaderAppearance</b> property is used to assign an Appearance object to the header of a group.  It can also be used to retrieve the Appearance object that has been previously assigned.</p>
            <p class="code">Dim myAppearance As Infragistics.Win.Appearance</p>
            <p class="code">UltraListBar1.HeaderAppearance = myAppearance</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.HasHeaderAppearance">
            <summary>
            Read-only property that returns true if a <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.HeaderAppearance"/> object has been created and assigned to the object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.Appearance">
            <summary>
            Property that gets/sets the default <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Appearance"/> for the control.
            </summary>
            <remarks>
            <p class="body">The <b>Appearance</b> object encapsulates the behaviors of the properties related to visual formatting.  After you create an Appearance object, you can manipulate its properties and reuse the object as ofte as you wish within your project.</p>
            <p class="code">Dim myAppearance As Infragistics.Win.Appearance</p>
            <p class="code">myAppearance.BackColor = System.Drawing.Color.Aquamarine</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.HasAppearance">
            <summary>
            Read-only property that returns true if an <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Appearance"/> object has been assigned to the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.DefaultIcon">
            <summary>
            Property that gets/sets the default icon used to display items.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.DefaultStyle">
            <summary>
            Property that gets/sets the default style (large or small icons) for items in newly created Groups.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.BorderStyle">
            <summary>
            Property that gets/sets the style for the borders for the entire control.
            </summary>
            <remarks>
            <p class="body">The <b>BorderStyle</b> property has ten settings.  The BorderStyle can be dashed, dotted, raised, solid, etched, inset or have none of these qualities.</p>
            <p class="code">UltraListBar1.BorderStyle = Infragistics.Win.UIElementBorderStyle.InsetSoft</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.About">
            <summary>
            Display the about dialog
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.Infragistics#Shared#IUltraLicensedComponent#License">
            <summary>
            Return the license we cached inside the constructor
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.DefaultSize">
            <summary>
            Read-only property that returns the default height and width of the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBar.BackgroundImage">
            <summary>
            Overrides the control's background and hides the image so that the appearance can be used instead.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.UltraListBarDesigner">
            <summary>
            Adds verbs to the right click menu at design time
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.AddGroup(System.Object,System.EventArgs)">
            <summary>
            Adds a group 
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.RemoveGroup(System.Object,System.EventArgs)">
            <summary>
            Allow user to remove group provided one group always exists.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.AddItem(System.Object,System.EventArgs)">
            <summary>
            Adds an item to an existing group 
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.Verbs">
            <summary>
            Adds verbs to the collection
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.ActionLists">
            <summary>
            Gets the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection"/> for this designer's control/component.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.UltraListBarActionList">
            <summary>
            Provides DesignerActionItems for the SmartTag associated with the UltraListBar.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.UltraListBarActionList.#ctor(Infragistics.Win.UltraWinListBar.UltraListBar)">
            <summary>
            Constructor
            </summary>
            <param name="product">The UltraListBar</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.UltraListBarActionList.CreateActionItems(System.ComponentModel.Design.DesignerActionItemCollection)">
            <summary>
            Overrides CreateActionItems.
            </summary>
            <param name="actionItems">The list to populate.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.UltraListBarActionList.AddGroup">
            <summary>
            Used by SmartTag Panel.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.UltraListBarActionList.AddItem">
            <summary>
            Used by SmartTag Panel.
            </summary>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.UltraListBarActionList.EditGroups">
            <summary>
            Used by SmartTag Panel.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBarDesigner.UltraListBarActionList.Dock">
            <summary>
            Used by SmartTag Panel.
            </summary>
        </member>
        <member name="T:Infragistics.Win.UltraWinListBar.UltraListBarUIElement">
            <summary>
            The main UIElement for an UltraListBar.
            </summary>
            <remarks>
            <p class="body">The <b>UltraListBarUIElement</b> occupies the entire area of the control.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarUIElement.OnPreMouseDown(Infragistics.Win.MouseMessageInfo@)">
            <summary>
            Called when a mouse down message is received. 
            </summary>
            <remarks>
            <p class="body">When the <b>OnPreMouseDown</b> is passed 'true', normal mouse down processing will be skipped.</p>
            </remarks>
            <param name="msgInfo"></param>
            <returns>True will cause normal mouse down processing to be skipped.</returns>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarUIElement.DrawBackColor(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Draws the control's back color.
            </summary>
            <remarks>
            <p class="body">The background will only be draw here if the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.BorderStyle"/> property is set to dotted or dashed.  Otherwise, the drawing of the background is handled by the child elements.</p>
            </remarks>
            <param name="drawParams">The <see cref="T:Infragistics.Win.UIElementDrawParams"/> used to provide rendering information.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarUIElement.DrawImageBackground(Infragistics.Win.UIElementDrawParams@)">
            <summary>
            Does nothing. Background image is not drawn.
            </summary>
            <param name="drawParams">The <see cref="T:Infragistics.Win.UIElementDrawParams"/> used to provide rendering information.</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarUIElement.InitAppearance(Infragistics.Win.AppearanceData@,Infragistics.Win.AppearancePropFlags@)">
            <summary>
            Initializes the <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.Appearance"/> for the control.
            </summary>
            <param name="appearance">The appearance structure to initialize</param>
            <param name="requestedProps">The properties that are needed</param>
        </member>
        <member name="M:Infragistics.Win.UltraWinListBar.UltraListBarUIElement.PositionChildElements">
            <summary>
            Sizes and positions the child UIElements for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBarUIElement.BorderStyle">
            <summary>
            Read-only property that returns a <see cref="P:Infragistics.Win.UltraWinListBar.UltraListBar.BorderStyle"/> of InsetSoft if that property ise set to its default value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBarUIElement.BorderSides">
            <summary>
            Read-only property that returns all borders.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBarUIElement.ChildElementArrayCapacity">
            <summary>
            Read-only property that returns an integer that reflects the number of child elements expected to be created.
            </summary>
        </member>
        <member name="P:Infragistics.Win.UltraWinListBar.UltraListBarUIElement.UltraListBar">
            <summary>
            Read-only property that returns the related UltraListBar control.
            </summary>
        </member>
    </members>
</doc>
